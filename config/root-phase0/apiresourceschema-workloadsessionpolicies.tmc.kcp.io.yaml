apiVersion: apis.kcp.io/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v250805-30fc9e6d.workloadsessionpolicies.tmc.kcp.io
spec:
  group: tmc.kcp.io
  names:
    kind: WorkloadSessionPolicy
    listKind: WorkloadSessionPolicyList
    plural: workloadsessionpolicies
    singular: workloadsessionpolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      description: WorkloadSessionPolicy represents session management and configuration
        for workload placement.
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          description: WorkloadSessionPolicySpec defines the desired state of WorkloadSessionPolicy.
          properties:
            clusterSelector:
              description: ClusterSelector defines which clusters to apply session
                policies
              properties:
                clusterNames:
                  description: ClusterNames explicitly lists cluster names to target
                  items:
                    type: string
                  type: array
                labelSelector:
                  description: LabelSelector selects clusters based on labels
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                locationSelector:
                  description: LocationSelector selects clusters from specific locations
                  items:
                    type: string
                  type: array
              type: object
            sessionAffinity:
              description: SessionAffinity defines session affinity settings
              properties:
                cookieName:
                  description: CookieName defines cookie name for cookie-based affinity
                  type: string
                headerName:
                  description: HeaderName defines header name for header-based affinity
                  type: string
                timeoutSeconds:
                  default: 3600
                  description: TimeoutSeconds defines affinity timeout
                  format: int32
                  type: integer
                type:
                  allOf:
                  - enum:
                    - ClientIP
                    - Cookie
                    - Header
                    - None
                  - enum:
                    - ClientIP
                    - Cookie
                    - Header
                    - None
                  default: ClientIP
                  description: Type defines the affinity type
                  type: string
              type: object
            sessionConfig:
              description: SessionConfig defines session configuration settings
              properties:
                cookieConfig:
                  description: CookieConfig defines cookie-based session configuration
                  properties:
                    domain:
                      description: Domain defines the cookie domain
                      type: string
                    httpOnly:
                      default: true
                      description: HTTPOnly indicates if cookie should be HTTP only
                      type: boolean
                    maxAge:
                      default: 3600
                      description: MaxAge defines cookie max age in seconds
                      format: int32
                      type: integer
                    name:
                      default: TMCSESSIONID
                      description: Name is the cookie name
                      type: string
                    path:
                      default: /
                      description: Path defines the cookie path
                      type: string
                    sameSite:
                      allOf:
                      - enum:
                        - Strict
                        - Lax
                        - None
                      - enum:
                        - Strict
                        - Lax
                        - None
                      default: Lax
                      description: SameSite defines cookie SameSite attribute
                      type: string
                    secure:
                      default: true
                      description: Secure indicates if cookie should be secure
                      type: boolean
                  type: object
                drainTimeout:
                  default: 300s
                  description: DrainTimeout defines timeout for draining sessions
                    during updates
                  type: string
                persistenceConfig:
                  description: PersistenceConfig defines session persistence settings
                  properties:
                    backendType:
                      allOf:
                      - enum:
                        - Memory
                        - Redis
                      - enum:
                        - Memory
                        - Redis
                      default: Memory
                      description: BackendType defines the persistence backend type
                      type: string
                    connectionString:
                      description: ConnectionString defines the backend connection
                        string
                      type: string
                    enabled:
                      default: true
                      description: Enabled indicates if session persistence is enabled
                      type: boolean
                    ttl:
                      default: 1800s
                      description: TTL defines time-to-live for session data
                      type: string
                  type: object
                sessionType:
                  allOf:
                  - enum:
                    - Sticky
                    - RoundRobin
                    - LeastConnections
                    - IPHash
                    - Cookie
                  - enum:
                    - Sticky
                    - RoundRobin
                    - LeastConnections
                    - IPHash
                    - Cookie
                  description: SessionType defines the type of session management
                  type: string
              required:
              - sessionType
              type: object
            sessionTimeout:
              description: SessionTimeout defines session timeout settings
              properties:
                cleanupInterval:
                  default: 900s
                  description: CleanupInterval defines interval for cleaning expired
                    sessions
                  type: string
                idleTimeout:
                  default: 1800s
                  description: IdleTimeout defines idle timeout for sessions
                  type: string
                maxLifetime:
                  default: 86400s
                  description: MaxLifetime defines maximum session lifetime
                  type: string
                warningThreshold:
                  default: 300s
                  description: WarningThreshold defines when to warn about expiring
                    sessions
                  type: string
              type: object
            workloadSelector:
              description: WorkloadSelector selects the workloads this session policy
                applies to
              properties:
                labelSelector:
                  description: LabelSelector selects workloads based on labels
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                namespaceSelector:
                  description: NamespaceSelector selects workloads from specific namespaces
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                workloadTypes:
                  description: WorkloadTypes specifies the types of workloads to select
                  items:
                    description: WorkloadType represents a Kubernetes workload type
                    properties:
                      apiVersion:
                        description: APIVersion is the API version of the workload
                        type: string
                      kind:
                        description: Kind is the kind of the workload
                        type: string
                    required:
                    - apiVersion
                    - kind
                    type: object
                  type: array
              type: object
          required:
          - clusterSelector
          - sessionConfig
          - workloadSelector
          type: object
        status:
          description: WorkloadSessionPolicyStatus represents the observed state of
            WorkloadSessionPolicy
          properties:
            activeSessions:
              description: ActiveSessions represents the current number of active
                sessions
              format: int32
              type: integer
            affectedWorkloads:
              description: AffectedWorkloads contains workloads affected by this session
                policy
              items:
                description: WorkloadReference references a Kubernetes workload
                properties:
                  apiVersion:
                    description: APIVersion is the API version of the workload
                    type: string
                  kind:
                    description: Kind is the kind of the workload
                    type: string
                  name:
                    description: Name is the name of the workload
                    type: string
                  namespace:
                    description: Namespace is the namespace of the workload
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              type: array
            conditions:
              description: Conditions represent the latest available observations
                of the session policy state
              items:
                description: Condition defines an observation of a object operational
                  state.
                properties:
                  lastTransitionTime:
                    description: |-
                      Last time the condition transitioned from one status to another.
                      This should be when the underlying condition changed. If that is not known, then using the time when
                      the API field changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: |-
                      A human readable message indicating details about the transition.
                      This field may be empty.
                    type: string
                  reason:
                    description: |-
                      The reason for the condition's last transition in CamelCase.
                      The specific API may choose whether or not this field is considered a guaranteed API.
                      This field may not be empty.
                    type: string
                  severity:
                    description: |-
                      Severity provides an explicit classification of Reason code, so the users or machines can immediately
                      understand the current situation and act accordingly.
                      The Severity field MUST be set only when Status=False.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: |-
                      Type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                      can be useful (see .node.status.conditions), the ability to deconflict is important.
                    type: string
                required:
                - lastTransitionTime
                - status
                - type
                type: object
              type: array
            lastUpdateTime:
              description: LastUpdateTime is when the status was last updated
              format: date-time
              type: string
            message:
              description: Message provides additional information about the session
                policy state
              type: string
            phase:
              default: Active
              description: Phase indicates the current session policy phase
              enum:
              - Active
              - Draining
              - Suspended
              - Failed
              - Unknown
              type: string
            sessionBackends:
              description: SessionBackends contains information about session backends
              items:
                description: SessionBackendStatus represents the status of a session
                  backend
                properties:
                  activeSessions:
                    description: ActiveSessions is the number of active sessions on
                      this backend
                    format: int32
                    type: integer
                  clusterName:
                    description: ClusterName is the cluster where the backend is located
                    type: string
                  healthCheckFailures:
                    description: HealthCheckFailures is the number of consecutive
                      health check failures
                    format: int32
                    type: integer
                  lastHealthCheck:
                    description: LastHealthCheck is when the backend was last health
                      checked
                    format: date-time
                    type: string
                  message:
                    description: Message provides additional information about the
                      backend status
                    type: string
                  name:
                    description: Name is the backend name
                    type: string
                  status:
                    allOf:
                    - enum:
                      - Healthy
                      - Unhealthy
                      - Draining
                      - Unknown
                    - enum:
                      - Healthy
                      - Unhealthy
                      - Draining
                      - Unknown
                    description: Status is the backend status
                    type: string
                  weight:
                    description: Weight is the current load balancing weight
                    format: int32
                    type: integer
                required:
                - activeSessions
                - clusterName
                - healthCheckFailures
                - name
                - status
                - weight
                type: object
              type: array
            totalSessions:
              description: TotalSessions represents the total number of sessions managed
              format: int32
              type: integer
          required:
          - activeSessions
          - totalSessions
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}
