---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
    kcp.io/cluster-aware: "true"
  name: constraintevaluationengines.tmc.kcp.io
spec:
  group: tmc.kcp.io
  names:
    categories:
    - tmc
    - all
    kind: ConstraintEvaluationEngine
    listKind: ConstraintEvaluationEngineList
    plural: constraintevaluationengines
    singular: constraintevaluationengine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.engineType
      name: Engine Type
      type: string
    - jsonPath: .spec.ruleCount
      name: Rules Count
      type: integer
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ConstraintEvaluationEngine provides basic rule evaluation and enforcement for
          session binding constraints. It implements a simple rule-based approach for constraint
          evaluation with basic violation handling.

          This resource is workspace-aware and supports KCP logical cluster isolation to ensure
          proper multi-tenancy in KCP environments.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ConstraintEvaluationEngineSpec defines the desired state
              of the evaluation engine
            properties:
              engineType:
                default: RuleBasedEngine
                description: |-
                  EngineType defines the type of evaluation engine to use
                  Only RuleBasedEngine is supported in this core implementation
                enum:
                - RuleBasedEngine
                type: string
              evaluationRules:
                description: EvaluationRules defines the rules for constraint evaluation
                items:
                  description: ConstraintEvaluationRule defines a rule for constraint
                    evaluation
                  properties:
                    action:
                      description: Action defines what action to take when rule is
                        triggered
                      properties:
                        configuration:
                          additionalProperties:
                            type: string
                          description: Configuration provides action-specific settings
                          maxProperties: 5
                          type: object
                        remediation:
                          description: Remediation defines basic remediation actions
                          properties:
                            maxAttempts:
                              default: 3
                              description: MaxAttempts defines maximum remediation
                                attempts
                              format: int32
                              maximum: 5
                              minimum: 1
                              type: integer
                            strategy:
                              description: |-
                                Strategy defines the remediation strategy
                                Only basic strategies are supported in this core implementation
                              enum:
                              - AutoRemediate
                              - LogOnly
                              type: string
                          required:
                          - strategy
                          type: object
                        type:
                          description: |-
                            Type defines the action type
                            Only basic actions are supported in this core implementation
                          enum:
                          - Block
                          - Allow
                          - Warn
                          type: string
                      required:
                      - type
                      type: object
                    condition:
                      description: Condition defines when this rule should be evaluated
                      properties:
                        evaluationInterval:
                          default: 60s
                          description: EvaluationInterval defines how often to evaluate
                            the condition
                          type: string
                        expression:
                          description: Expression defines the condition expression
                            (CEL format)
                          maxLength: 1024
                          type: string
                      required:
                      - expression
                      type: object
                    enabled:
                      default: true
                      description: Enabled indicates whether this rule is active
                      type: boolean
                    name:
                      description: Name is a unique identifier for the rule
                      maxLength: 64
                      minLength: 1
                      type: string
                    parameters:
                      additionalProperties:
                        type: string
                      description: Parameters provide rule-specific configuration
                      maxProperties: 10
                      type: object
                    priority:
                      default: 50
                      description: Priority defines the priority of this rule (higher
                        values are higher priority)
                      format: int32
                      maximum: 100
                      minimum: 1
                      type: integer
                    ruleType:
                      description: |-
                        RuleType defines the type of evaluation rule
                        Only Threshold and Capacity are supported in this core implementation
                      enum:
                      - Threshold
                      - Capacity
                      type: string
                  required:
                  - action
                  - condition
                  - enabled
                  - name
                  - ruleType
                  type: object
                maxItems: 50
                minItems: 1
                type: array
              ruleCount:
                description: RuleCount tracks the number of active evaluation rules
                format: int32
                maximum: 50
                minimum: 0
                type: integer
              violationHandling:
                description: ViolationHandling configures how violations should be
                  processed
                properties:
                  alertingEnabled:
                    default: false
                    description: AlertingEnabled enables basic alerting for violations
                    type: boolean
                  maxViolationHistory:
                    default: 50
                    description: MaxViolationHistory defines how many violations to
                      track
                    format: int32
                    maximum: 100
                    minimum: 10
                    type: integer
                  trackingEnabled:
                    default: true
                    description: TrackingEnabled enables violation tracking
                    type: boolean
                required:
                - trackingEnabled
                type: object
            required:
            - engineType
            - evaluationRules
            - ruleCount
            type: object
          status:
            description: ConstraintEvaluationEngineStatus represents the observed
              state
            properties:
              conditions:
                description: Conditions represent the latest available observations
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              evaluationMetrics:
                description: EvaluationMetrics provides basic performance metrics
                properties:
                  averageEvaluationTime:
                    description: AverageEvaluationTime tracks average evaluation time
                    type: string
                  failedEvaluations:
                    description: FailedEvaluations tracks failed evaluations
                    format: int64
                    type: integer
                  successfulEvaluations:
                    description: SuccessfulEvaluations tracks successful evaluations
                    format: int64
                    type: integer
                  totalEvaluations:
                    description: TotalEvaluations tracks total evaluations performed
                    format: int64
                    type: integer
                required:
                - failedEvaluations
                - successfulEvaluations
                - totalEvaluations
                type: object
              lastUpdateTime:
                description: LastUpdateTime is when the status was last updated
                format: date-time
                type: string
              message:
                description: Message provides additional information about the engine
                  state
                type: string
              phase:
                default: Active
                description: Phase indicates the current engine phase
                type: string
              ruleStatistics:
                description: RuleStatistics provides rule execution statistics
                items:
                  description: RuleExecutionStats provides statistics for rule execution
                  properties:
                    errorCount:
                      description: ErrorCount tracks execution errors
                      format: int64
                      type: integer
                    executionCount:
                      description: ExecutionCount tracks how many times the rule was
                        executed
                      format: int64
                      type: integer
                    lastExecutionTime:
                      description: LastExecutionTime tracks when the rule was last
                        executed
                      format: date-time
                      type: string
                    ruleName:
                      description: RuleName identifies the rule
                      type: string
                    triggerCount:
                      description: TriggerCount tracks how many times the rule was
                        triggered
                      format: int64
                      type: integer
                  required:
                  - errorCount
                  - executionCount
                  - ruleName
                  - triggerCount
                  type: object
                type: array
              violationSummary:
                description: ViolationSummary provides basic violation summary information
                properties:
                  activeViolations:
                    description: ActiveViolations tracks currently active violations
                    format: int64
                    type: integer
                  resolvedViolations:
                    description: ResolvedViolations tracks resolved violations
                    format: int64
                    type: integer
                  totalViolations:
                    description: TotalViolations tracks total violations detected
                    format: int64
                    type: integer
                required:
                - activeViolations
                - resolvedViolations
                - totalViolations
                type: object
            type: object
        type: object
        x-kubernetes-validations:
        - rule: self.metadata.annotations['kcp.io/cluster'] != ''
    served: true
    storage: true
    subresources:
      status: {}
