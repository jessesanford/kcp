---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clusterworkloadplacements.workload.kcp.io
spec:
  group: workload.kcp.io
  names:
    categories:
    - kcp
    kind: ClusterWorkloadPlacement
    listKind: ClusterWorkloadPlacementList
    plural: clusterworkloadplacements
    singular: clusterworkloadplacement
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.selectedTargets
      name: Targets
      type: integer
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ClusterWorkloadPlacement defines a policy for placing workloads across
          multiple sync targets based on selector criteria and placement constraints.
          It enables declarative workload distribution with automatic target selection.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds the desired placement policy configuration.
            properties:
              locationSelector:
                description: |-
                  locationSelector defines location-based placement constraints.
                  This allows targeting specific geographical or logical locations.
                properties:
                  preferredLocations:
                    description: |
                      preferredLocations is a list of preferred location names for target ranking.
                      Targets matching preferred locations receive higher placement scores.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  requiredLocations:
                    description: |-
                      requiredLocations is a list of location names that targets must match.
                      At least one of these locations must be satisfied for target eligibility.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              maxReplicas:
                description: |-
                  maxReplicas limits the maximum number of targets for workload distribution.
                  If unspecified, workloads can be placed on any number of matching targets.
                format: int32
                type: integer
              minReplicas:
                description: |-
                  minReplicas ensures minimum redundancy by requiring placement on at least
                  this many targets. Placement will fail if insufficient targets are available.
                format: int32
                type: integer
              namespaceSelector:
                description: |-
                  namespaceSelector selects workloads based on their namespace labels.
                  Only workloads in namespaces matching this selector will be placed.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              resourceRequirements:
                description: |
                  resourceRequirements specifies resource constraints for target selection.
                  Only targets meeting these requirements will be considered for placement.
                properties:
                  minCpu:
                    description: |
                      minCPU specifies the minimum CPU capacity required on target clusters.
                    type: string
                  minMemory:
                    description: |
                      minMemory specifies the minimum memory capacity required on target clusters.
                    type: string
                type: object
            type: object
          status:
            description: Status communicates the observed state of the placement policy.
            properties:
              conditions:
                description: conditions is a list of conditions that apply to the
                  placement policy.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              lastPlacementTime:
                description: lastPlacementTime is the last time placement evaluation
                  was performed.
                format: date-time
                type: string
              selectedTargets:
                description: |-
                  selectedTargets is the number of sync targets currently selected
                  by this placement policy.
                format: int32
                type: integer
              targetSelections:
                description: |-
                  targetSelections contains detailed information about target selection
                  and placement decisions made by this policy.
                items:
                  description: |-
                    TargetSelection represents the selection of a specific sync target
                    and the reasoning behind the placement decision.
                  properties:
                    lastEvaluationTime:
                      description: lastEvaluationTime is when this target was last
                        evaluated for placement.
                      format: date-time
                      type: string
                    reason:
                      description: reason provides explanation for the selection decision.
                      type: string
                    score:
                      description: |
                        score represents the placement score for this target (higher is better).
                        Used for ranking when multiple targets are available.
                      format: int32
                      type: integer
                    selected:
                      description: selected indicates whether this target was selected
                        for placement.
                      type: boolean
                    targetName:
                      description: targetName is the name of the selected sync target.
                      type: string
                    workspace:
                      description: workspace is the logical cluster workspace where
                        the target exists.
                      type: string
                  required:
                  - selected
                  - targetName
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
