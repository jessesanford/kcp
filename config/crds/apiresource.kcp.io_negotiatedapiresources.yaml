---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: negotiatedapiresources.apiresource.kcp.io
spec:
  group: apiresource.kcp.io
  names:
    categories:
    - kcp
    kind: NegotiatedAPIResource
    listKind: NegotiatedAPIResourceList
    plural: negotiatedapiresources
    singular: negotiatedapiresource
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Compatible
      type: string
    - jsonPath: .spec.groupVersion
      name: APIVersion
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          NegotiatedAPIResource represents an API resource that has been negotiated
          between a workspace and sync targets for compatibility. This enables dynamic
          API discovery and compatibility checking to determine what workloads can be
          placed where in a multi-cluster environment.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired negotiation state
            properties:
              commonSchema:
                description: |-
                  CommonSchema defines the shared schema that all sync targets must support.
                  This represents the intersection of capabilities across all targets.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              groupVersion:
                description: GroupVersion is the API group version to negotiate
                properties:
                  group:
                    description: Group is the API group name (e.g., "apps", "extensions")
                    type: string
                  version:
                    description: Version is the API version (e.g., "v1", "v1beta1",
                      "v1alpha1")
                    type: string
                required:
                - group
                - version
                type: object
              publish:
                description: |-
                  Publish determines if this negotiated API should be published to sync targets
                  for consumption by workload placement decisions.
                type: boolean
              resources:
                description: Resources defines the list of resources to negotiate
                  within this group version
                items:
                  description: ResourceNegotiation defines the negotiation parameters
                    for a specific API resource.
                  properties:
                    kind:
                      description: Kind is the resource kind (e.g., "Deployment")
                      type: string
                    requiredFields:
                      description: |-
                        RequiredFields specifies fields that must be supported by all sync targets
                        for compatibility. This allows validation of schema compatibility.
                      items:
                        description: FieldRequirement specifies a required field for
                          API compatibility.
                        properties:
                          path:
                            description: Path is the JSONPath to the field (e.g.,
                              ".spec.replicas")
                            type: string
                          required:
                            description: Required indicates whether this field must
                              be present for compatibility
                            type: boolean
                          type:
                            description: Type is the expected field type (e.g., "integer",
                              "string", "object")
                            type: string
                        required:
                        - path
                        - required
                        - type
                        type: object
                      type: array
                    resource:
                      description: Resource is the resource name (plural form, e.g.,
                        "deployments")
                      type: string
                    scope:
                      description: Scope defines whether this is a cluster-scoped
                        or namespaced resource
                      enum:
                      - Cluster
                      - Namespaced
                      type: string
                    subresources:
                      description: Subresources lists the subresources that should
                        be supported (e.g., "status", "scale")
                      items:
                        type: string
                      type: array
                  required:
                  - kind
                  - resource
                  - scope
                  type: object
                type: array
            required:
            - groupVersion
            - resources
            type: object
          status:
            description: Status defines the observed state of the negotiation
            properties:
              compatibleLocations:
                description: CompatibleLocations lists sync targets where this API
                  is fully supported
                items:
                  description: CompatibleLocation represents a sync target that supports
                    this API.
                  properties:
                    constraints:
                      description: Constraints lists any constraints or limitations
                        at this location
                      items:
                        description: LocationConstraint defines a constraint or limitation
                          at a specific location.
                        properties:
                          type:
                            description: Type categorizes the constraint (e.g., "version",
                              "feature", "field")
                            type: string
                          value:
                            description: Value provides the constraint details
                            type: string
                        required:
                        - type
                        - value
                        type: object
                      type: array
                    name:
                      description: Name of the sync target location
                      type: string
                    supportedVersions:
                      description: SupportedVersions lists the API versions supported
                        at this location
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              conditions:
                description: Conditions represent the current observed conditions
                  of the negotiation
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              incompatibleLocations:
                description: |-
                  IncompatibleLocations lists sync targets where this API is not supported
                  along with the reasons for incompatibility
                items:
                  description: IncompatibleLocation represents a sync target that
                    does not support this API.
                  properties:
                    missingFields:
                      description: MissingFields lists required fields that are not
                        supported at this location
                      items:
                        type: string
                      type: array
                    name:
                      description: Name of the sync target location
                      type: string
                    reason:
                      description: Reason provides a human-readable explanation for
                        the incompatibility
                      type: string
                  required:
                  - name
                  - reason
                  type: object
                type: array
              lastNegotiationTime:
                description: LastNegotiationTime records when the negotiation was
                  last attempted
                format: date-time
                type: string
              phase:
                description: Phase represents the current phase of the negotiation
                  process
                enum:
                - Pending
                - Negotiating
                - Compatible
                - Incompatible
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
