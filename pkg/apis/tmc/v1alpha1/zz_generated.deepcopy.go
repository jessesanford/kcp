//go:build !ignore_autogenerated

/*
Copyright The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	conditionsv1alpha1 "github.com/kcp-dev/kcp/sdk/apis/third_party/conditions/apis/conditions/v1alpha1"
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityFailoverPolicy) DeepCopyInto(out *AffinityFailoverPolicy) {
	*out = *in
	out.DelayBeforeFailover = in.DelayBeforeFailover
	if in.AlternativeClusterSelector != nil {
		in, out := &in.AlternativeClusterSelector, &out.AlternativeClusterSelector
		*out = new(ClusterSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityFailoverPolicy.
func (in *AffinityFailoverPolicy) DeepCopy() *AffinityFailoverPolicy {
	if in == nil {
		return nil
	}
	out := new(AffinityFailoverPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicEvaluationMetrics) DeepCopyInto(out *BasicEvaluationMetrics) {
	*out = *in
	out.AverageEvaluationTime = in.AverageEvaluationTime
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicEvaluationMetrics.
func (in *BasicEvaluationMetrics) DeepCopy() *BasicEvaluationMetrics {
	if in == nil {
		return nil
	}
	out := new(BasicEvaluationMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicRemediationAction) DeepCopyInto(out *BasicRemediationAction) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicRemediationAction.
func (in *BasicRemediationAction) DeepCopy() *BasicRemediationAction {
	if in == nil {
		return nil
	}
	out := new(BasicRemediationAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicViolationHandlingConfig) DeepCopyInto(out *BasicViolationHandlingConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicViolationHandlingConfig.
func (in *BasicViolationHandlingConfig) DeepCopy() *BasicViolationHandlingConfig {
	if in == nil {
		return nil
	}
	out := new(BasicViolationHandlingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicViolationSummary) DeepCopyInto(out *BasicViolationSummary) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicViolationSummary.
func (in *BasicViolationSummary) DeepCopy() *BasicViolationSummary {
	if in == nil {
		return nil
	}
	out := new(BasicViolationSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindingAutoRenewal) DeepCopyInto(out *BindingAutoRenewal) {
	*out = *in
	out.RenewalInterval = in.RenewalInterval
	out.RenewalThreshold = in.RenewalThreshold
	out.ExtensionDuration = in.ExtensionDuration
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindingAutoRenewal.
func (in *BindingAutoRenewal) DeepCopy() *BindingAutoRenewal {
	if in == nil {
		return nil
	}
	out := new(BindingAutoRenewal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindingConflictResolution) DeepCopyInto(out *BindingConflictResolution) {
	*out = *in
	out.ConflictTimeout = in.ConflictTimeout
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindingConflictResolution.
func (in *BindingConflictResolution) DeepCopy() *BindingConflictResolution {
	if in == nil {
		return nil
	}
	out := new(BindingConflictResolution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindingConflictStatus) DeepCopyInto(out *BindingConflictStatus) {
	*out = *in
	if in.ConflictingBindings != nil {
		in, out := &in.ConflictingBindings, &out.ConflictingBindings
		*out = make([]ObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.LastConflictTime != nil {
		in, out := &in.LastConflictTime, &out.LastConflictTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindingConflictStatus.
func (in *BindingConflictStatus) DeepCopy() *BindingConflictStatus {
	if in == nil {
		return nil
	}
	out := new(BindingConflictStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindingPerformanceMetrics) DeepCopyInto(out *BindingPerformanceMetrics) {
	*out = *in
	out.CreationLatency = in.CreationLatency
	out.AverageRenewalLatency = in.AverageRenewalLatency
	out.StorageLatency = in.StorageLatency
	out.ConflictResolutionTime = in.ConflictResolutionTime
	if in.LastRequestTime != nil {
		in, out := &in.LastRequestTime, &out.LastRequestTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindingPerformanceMetrics.
func (in *BindingPerformanceMetrics) DeepCopy() *BindingPerformanceMetrics {
	if in == nil {
		return nil
	}
	out := new(BindingPerformanceMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindingStorageBackend) DeepCopyInto(out *BindingStorageBackend) {
	*out = *in
	if in.ConfigMapRef != nil {
		in, out := &in.ConfigMapRef, &out.ConfigMapRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.ExternalConfig != nil {
		in, out := &in.ExternalConfig, &out.ExternalConfig
		*out = new(ExternalStorageConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(StorageEncryption)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindingStorageBackend.
func (in *BindingStorageBackend) DeepCopy() *BindingStorageBackend {
	if in == nil {
		return nil
	}
	out := new(BindingStorageBackend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelector) DeepCopyInto(out *ClusterSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationSelector != nil {
		in, out := &in.LocationSelector, &out.LocationSelector
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClusterNames != nil {
		in, out := &in.ClusterNames, &out.ClusterNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelector.
func (in *ClusterSelector) DeepCopy() *ClusterSelector {
	if in == nil {
		return nil
	}
	out := new(ClusterSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintEvaluationEngine) DeepCopyInto(out *ConstraintEvaluationEngine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintEvaluationEngine.
func (in *ConstraintEvaluationEngine) DeepCopy() *ConstraintEvaluationEngine {
	if in == nil {
		return nil
	}
	out := new(ConstraintEvaluationEngine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConstraintEvaluationEngine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintEvaluationEngineList) DeepCopyInto(out *ConstraintEvaluationEngineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConstraintEvaluationEngine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintEvaluationEngineList.
func (in *ConstraintEvaluationEngineList) DeepCopy() *ConstraintEvaluationEngineList {
	if in == nil {
		return nil
	}
	out := new(ConstraintEvaluationEngineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConstraintEvaluationEngineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintEvaluationEngineSpec) DeepCopyInto(out *ConstraintEvaluationEngineSpec) {
	*out = *in
	if in.EvaluationRules != nil {
		in, out := &in.EvaluationRules, &out.EvaluationRules
		*out = make([]ConstraintEvaluationRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ViolationHandling != nil {
		in, out := &in.ViolationHandling, &out.ViolationHandling
		*out = new(BasicViolationHandlingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintEvaluationEngineSpec.
func (in *ConstraintEvaluationEngineSpec) DeepCopy() *ConstraintEvaluationEngineSpec {
	if in == nil {
		return nil
	}
	out := new(ConstraintEvaluationEngineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintEvaluationEngineStatus) DeepCopyInto(out *ConstraintEvaluationEngineStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.EvaluationMetrics != nil {
		in, out := &in.EvaluationMetrics, &out.EvaluationMetrics
		*out = new(BasicEvaluationMetrics)
		**out = **in
	}
	if in.RuleStatistics != nil {
		in, out := &in.RuleStatistics, &out.RuleStatistics
		*out = make([]RuleExecutionStats, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ViolationSummary != nil {
		in, out := &in.ViolationSummary, &out.ViolationSummary
		*out = new(BasicViolationSummary)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintEvaluationEngineStatus.
func (in *ConstraintEvaluationEngineStatus) DeepCopy() *ConstraintEvaluationEngineStatus {
	if in == nil {
		return nil
	}
	out := new(ConstraintEvaluationEngineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintEvaluationRule) DeepCopyInto(out *ConstraintEvaluationRule) {
	*out = *in
	out.Condition = in.Condition
	in.Action.DeepCopyInto(&out.Action)
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintEvaluationRule.
func (in *ConstraintEvaluationRule) DeepCopy() *ConstraintEvaluationRule {
	if in == nil {
		return nil
	}
	out := new(ConstraintEvaluationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintExemption) DeepCopyInto(out *ConstraintExemption) {
	*out = *in
	in.Target.DeepCopyInto(&out.Target)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ExemptionCondition, len(*in))
		copy(*out, *in)
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintExemption.
func (in *ConstraintExemption) DeepCopy() *ConstraintExemption {
	if in == nil {
		return nil
	}
	out := new(ConstraintExemption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintTarget) DeepCopyInto(out *ConstraintTarget) {
	*out = *in
	if in.ClusterSelector != nil {
		in, out := &in.ClusterSelector, &out.ClusterSelector
		*out = new(ClusterSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkloadSelector != nil {
		in, out := &in.WorkloadSelector, &out.WorkloadSelector
		*out = new(WorkloadSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintTarget.
func (in *ConstraintTarget) DeepCopy() *ConstraintTarget {
	if in == nil {
		return nil
	}
	out := new(ConstraintTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintViolation) DeepCopyInto(out *ConstraintViolation) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	out.Target = in.Target
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintViolation.
func (in *ConstraintViolation) DeepCopy() *ConstraintViolation {
	if in == nil {
		return nil
	}
	out := new(ConstraintViolation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExemptionCondition) DeepCopyInto(out *ExemptionCondition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExemptionCondition.
func (in *ExemptionCondition) DeepCopy() *ExemptionCondition {
	if in == nil {
		return nil
	}
	out := new(ExemptionCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalStorageConfig) DeepCopyInto(out *ExternalStorageConfig) {
	*out = *in
	if in.AuthSecretRef != nil {
		in, out := &in.AuthSecretRef, &out.AuthSecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	out.ConnectionTimeout = in.ConnectionTimeout
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(ExternalStorageTLS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalStorageConfig.
func (in *ExternalStorageConfig) DeepCopy() *ExternalStorageConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalStorageConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalStorageTLS) DeepCopyInto(out *ExternalStorageTLS) {
	*out = *in
	if in.CASecretRef != nil {
		in, out := &in.CASecretRef, &out.CASecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalStorageTLS.
func (in *ExternalStorageTLS) DeepCopy() *ExternalStorageTLS {
	if in == nil {
		return nil
	}
	out := new(ExternalStorageTLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailoverEvent) DeepCopyInto(out *FailoverEvent) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailoverEvent.
func (in *FailoverEvent) DeepCopy() *FailoverEvent {
	if in == nil {
		return nil
	}
	out := new(FailoverEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectReference) DeepCopyInto(out *ObjectReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectReference.
func (in *ObjectReference) DeepCopy() *ObjectReference {
	if in == nil {
		return nil
	}
	out := new(ObjectReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleAction) DeepCopyInto(out *RuleAction) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Remediation != nil {
		in, out := &in.Remediation, &out.Remediation
		*out = new(BasicRemediationAction)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleAction.
func (in *RuleAction) DeepCopy() *RuleAction {
	if in == nil {
		return nil
	}
	out := new(RuleAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleCondition) DeepCopyInto(out *RuleCondition) {
	*out = *in
	out.EvaluationInterval = in.EvaluationInterval
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleCondition.
func (in *RuleCondition) DeepCopy() *RuleCondition {
	if in == nil {
		return nil
	}
	out := new(RuleCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleExecutionStats) DeepCopyInto(out *RuleExecutionStats) {
	*out = *in
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleExecutionStats.
func (in *RuleExecutionStats) DeepCopy() *RuleExecutionStats {
	if in == nil {
		return nil
	}
	out := new(RuleExecutionStats)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionAffinityPolicy) DeepCopyInto(out *SessionAffinityPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionAffinityPolicy.
func (in *SessionAffinityPolicy) DeepCopy() *SessionAffinityPolicy {
	if in == nil {
		return nil
	}
	out := new(SessionAffinityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionAffinityPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionAffinityPolicyList) DeepCopyInto(out *SessionAffinityPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SessionAffinityPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionAffinityPolicyList.
func (in *SessionAffinityPolicyList) DeepCopy() *SessionAffinityPolicyList {
	if in == nil {
		return nil
	}
	out := new(SessionAffinityPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionAffinityPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionAffinityPolicySpec) DeepCopyInto(out *SessionAffinityPolicySpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	out.StickinessPolicy = in.StickinessPolicy
	if in.FailoverPolicy != nil {
		in, out := &in.FailoverPolicy, &out.FailoverPolicy
		*out = new(AffinityFailoverPolicy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionAffinityPolicySpec.
func (in *SessionAffinityPolicySpec) DeepCopy() *SessionAffinityPolicySpec {
	if in == nil {
		return nil
	}
	out := new(SessionAffinityPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionAffinityPolicyStatus) DeepCopyInto(out *SessionAffinityPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.AffectedWorkloads != nil {
		in, out := &in.AffectedWorkloads, &out.AffectedWorkloads
		*out = make([]ObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.FailoverEvents != nil {
		in, out := &in.FailoverEvents, &out.FailoverEvents
		*out = make([]FailoverEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionAffinityPolicyStatus.
func (in *SessionAffinityPolicyStatus) DeepCopy() *SessionAffinityPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(SessionAffinityPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionBindingConstraint) DeepCopyInto(out *SessionBindingConstraint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionBindingConstraint.
func (in *SessionBindingConstraint) DeepCopy() *SessionBindingConstraint {
	if in == nil {
		return nil
	}
	out := new(SessionBindingConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionBindingConstraint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionBindingConstraintList) DeepCopyInto(out *SessionBindingConstraintList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SessionBindingConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionBindingConstraintList.
func (in *SessionBindingConstraintList) DeepCopy() *SessionBindingConstraintList {
	if in == nil {
		return nil
	}
	out := new(SessionBindingConstraintList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionBindingConstraintList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionBindingConstraintSpec) DeepCopyInto(out *SessionBindingConstraintSpec) {
	*out = *in
	in.Target.DeepCopyInto(&out.Target)
	if in.Exemptions != nil {
		in, out := &in.Exemptions, &out.Exemptions
		*out = make([]ConstraintExemption, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.CheckInterval = in.CheckInterval
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionBindingConstraintSpec.
func (in *SessionBindingConstraintSpec) DeepCopy() *SessionBindingConstraintSpec {
	if in == nil {
		return nil
	}
	out := new(SessionBindingConstraintSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionBindingConstraintStatus) DeepCopyInto(out *SessionBindingConstraintStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.LastCheckTime != nil {
		in, out := &in.LastCheckTime, &out.LastCheckTime
		*out = (*in).DeepCopy()
	}
	if in.CurrentUsage != nil {
		in, out := &in.CurrentUsage, &out.CurrentUsage
		*out = new(int64)
		**out = **in
	}
	if in.RecentViolations != nil {
		in, out := &in.RecentViolations, &out.RecentViolations
		*out = make([]ConstraintViolation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionBindingConstraintStatus.
func (in *SessionBindingConstraintStatus) DeepCopy() *SessionBindingConstraintStatus {
	if in == nil {
		return nil
	}
	out := new(SessionBindingConstraintStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickinessPolicy) DeepCopyInto(out *StickinessPolicy) {
	*out = *in
	out.Duration = in.Duration
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickinessPolicy.
func (in *StickinessPolicy) DeepCopy() *StickinessPolicy {
	if in == nil {
		return nil
	}
	out := new(StickinessPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickyBinding) DeepCopyInto(out *StickyBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickyBinding.
func (in *StickyBinding) DeepCopy() *StickyBinding {
	if in == nil {
		return nil
	}
	out := new(StickyBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StickyBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickyBindingList) DeepCopyInto(out *StickyBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StickyBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickyBindingList.
func (in *StickyBindingList) DeepCopy() *StickyBindingList {
	if in == nil {
		return nil
	}
	out := new(StickyBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StickyBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickyBindingSpec) DeepCopyInto(out *StickyBindingSpec) {
	*out = *in
	out.WorkloadReference = in.WorkloadReference
	out.AffinityPolicyRef = in.AffinityPolicyRef
	in.ExpiresAt.DeepCopyInto(&out.ExpiresAt)
	if in.AutoRenewal != nil {
		in, out := &in.AutoRenewal, &out.AutoRenewal
		*out = new(BindingAutoRenewal)
		**out = **in
	}
	in.StorageBackend.DeepCopyInto(&out.StorageBackend)
	if in.ConflictResolution != nil {
		in, out := &in.ConflictResolution, &out.ConflictResolution
		*out = new(BindingConflictResolution)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickyBindingSpec.
func (in *StickyBindingSpec) DeepCopy() *StickyBindingSpec {
	if in == nil {
		return nil
	}
	out := new(StickyBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickyBindingStatus) DeepCopyInto(out *StickyBindingStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.LastRenewalTime != nil {
		in, out := &in.LastRenewalTime, &out.LastRenewalTime
		*out = (*in).DeepCopy()
	}
	if in.NextRenewalTime != nil {
		in, out := &in.NextRenewalTime, &out.NextRenewalTime
		*out = (*in).DeepCopy()
	}
	if in.ConflictStatus != nil {
		in, out := &in.ConflictStatus, &out.ConflictStatus
		*out = new(BindingConflictStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageStatus != nil {
		in, out := &in.StorageStatus, &out.StorageStatus
		*out = new(StorageStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Performance != nil {
		in, out := &in.Performance, &out.Performance
		*out = new(BindingPerformanceMetrics)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickyBindingStatus.
func (in *StickyBindingStatus) DeepCopy() *StickyBindingStatus {
	if in == nil {
		return nil
	}
	out := new(StickyBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageEncryption) DeepCopyInto(out *StorageEncryption) {
	*out = *in
	if in.KeySecretRef != nil {
		in, out := &in.KeySecretRef, &out.KeySecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageEncryption.
func (in *StorageEncryption) DeepCopy() *StorageEncryption {
	if in == nil {
		return nil
	}
	out := new(StorageEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageStatus) DeepCopyInto(out *StorageStatus) {
	*out = *in
	if in.LastSyncTime != nil {
		in, out := &in.LastSyncTime, &out.LastSyncTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageStatus.
func (in *StorageStatus) DeepCopy() *StorageStatus {
	if in == nil {
		return nil
	}
	out := new(StorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSelector) DeepCopyInto(out *WorkloadSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkloadTypes != nil {
		in, out := &in.WorkloadTypes, &out.WorkloadTypes
		*out = make([]WorkloadType, len(*in))
		copy(*out, *in)
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSelector.
func (in *WorkloadSelector) DeepCopy() *WorkloadSelector {
	if in == nil {
		return nil
	}
	out := new(WorkloadSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadType) DeepCopyInto(out *WorkloadType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadType.
func (in *WorkloadType) DeepCopy() *WorkloadType {
	if in == nil {
		return nil
	}
	out := new(WorkloadType)
	in.DeepCopyInto(out)
	return out
}
