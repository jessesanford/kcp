//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	conditionsv1alpha1 "github.com/kcp-dev/kcp/sdk/apis/third_party/conditions/apis/conditions/v1alpha1"
	resource "k8s.io/apimachinery/pkg/api/resource"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternativePlacement) DeepCopyInto(out *AlternativePlacement) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternativePlacement.
func (in *AlternativePlacement) DeepCopy() *AlternativePlacement {
	if in == nil {
		return nil
	}
	out := new(AlternativePlacement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppliedPolicy) DeepCopyInto(out *AppliedPolicy) {
	*out = *in
	if in.AppliedRules != nil {
		in, out := &in.AppliedRules, &out.AppliedRules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppliedPolicy.
func (in *AppliedPolicy) DeepCopy() *AppliedPolicy {
	if in == nil {
		return nil
	}
	out := new(AppliedPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterEvaluation) DeepCopyInto(out *ClusterEvaluation) {
	*out = *in
	if in.EvaluationCriteria != nil {
		in, out := &in.EvaluationCriteria, &out.EvaluationCriteria
		*out = make([]EvaluationCriterion, len(*in))
		copy(*out, *in)
	}
	if in.ResourceAvailability != nil {
		in, out := &in.ResourceAvailability, &out.ResourceAvailability
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.RejectionReasons != nil {
		in, out := &in.RejectionReasons, &out.RejectionReasons
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterEvaluation.
func (in *ClusterEvaluation) DeepCopy() *ClusterEvaluation {
	if in == nil {
		return nil
	}
	out := new(ClusterEvaluation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInfo) DeepCopyInto(out *ClusterInfo) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(ClusterLocation)
		**out = **in
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceCapacity != nil {
		in, out := &in.ResourceCapacity, &out.ResourceCapacity
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInfo.
func (in *ClusterInfo) DeepCopy() *ClusterInfo {
	if in == nil {
		return nil
	}
	out := new(ClusterInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLocation) DeepCopyInto(out *ClusterLocation) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLocation.
func (in *ClusterLocation) DeepCopy() *ClusterLocation {
	if in == nil {
		return nil
	}
	out := new(ClusterLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelector) DeepCopyInto(out *ClusterSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationSelector != nil {
		in, out := &in.LocationSelector, &out.LocationSelector
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClusterNames != nil {
		in, out := &in.ClusterNames, &out.ClusterNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelector.
func (in *ClusterSelector) DeepCopy() *ClusterSelector {
	if in == nil {
		return nil
	}
	out := new(ClusterSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictDetection) DeepCopyInto(out *ConflictDetection) {
	*out = *in
	in.DetectionTime.DeepCopyInto(&out.DetectionTime)
	if in.ConflictingSessions != nil {
		in, out := &in.ConflictingSessions, &out.ConflictingSessions
		*out = make([]SessionReference, len(*in))
		copy(*out, *in)
	}
	if in.ConflictingDecisions != nil {
		in, out := &in.ConflictingDecisions, &out.ConflictingDecisions
		*out = make([]PlacementReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictDetection.
func (in *ConflictDetection) DeepCopy() *ConflictDetection {
	if in == nil {
		return nil
	}
	out := new(ConflictDetection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictDetectionPolicy) DeepCopyInto(out *ConflictDetectionPolicy) {
	*out = *in
	if in.DetectionScope != nil {
		in, out := &in.DetectionScope, &out.DetectionScope
		*out = new(ConflictDetectionScope)
		(*in).DeepCopyInto(*out)
	}
	if in.ConflictTypes != nil {
		in, out := &in.ConflictTypes, &out.ConflictTypes
		*out = make([]ConflictType, len(*in))
		copy(*out, *in)
	}
	if in.ResolutionStrategies != nil {
		in, out := &in.ResolutionStrategies, &out.ResolutionStrategies
		*out = make([]ConflictResolutionStrategy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationPolicy != nil {
		in, out := &in.NotificationPolicy, &out.NotificationPolicy
		*out = new(ConflictNotificationPolicy)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictDetectionPolicy.
func (in *ConflictDetectionPolicy) DeepCopy() *ConflictDetectionPolicy {
	if in == nil {
		return nil
	}
	out := new(ConflictDetectionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictDetectionScope) DeepCopyInto(out *ConflictDetectionScope) {
	*out = *in
	if in.IncludeNamespaces != nil {
		in, out := &in.IncludeNamespaces, &out.IncludeNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludeNamespaces != nil {
		in, out := &in.ExcludeNamespaces, &out.ExcludeNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludeClusters != nil {
		in, out := &in.IncludeClusters, &out.IncludeClusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludeClusters != nil {
		in, out := &in.ExcludeClusters, &out.ExcludeClusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceTypes != nil {
		in, out := &in.ResourceTypes, &out.ResourceTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictDetectionScope.
func (in *ConflictDetectionScope) DeepCopy() *ConflictDetectionScope {
	if in == nil {
		return nil
	}
	out := new(ConflictDetectionScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictNotificationPolicy) DeepCopyInto(out *ConflictNotificationPolicy) {
	*out = *in
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]NotificationChannelRef, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictNotificationPolicy.
func (in *ConflictNotificationPolicy) DeepCopy() *ConflictNotificationPolicy {
	if in == nil {
		return nil
	}
	out := new(ConflictNotificationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictRecord) DeepCopyInto(out *ConflictRecord) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	if in.ConflictingPlacements != nil {
		in, out := &in.ConflictingPlacements, &out.ConflictingPlacements
		*out = make([]PlacementReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(ConflictResolution)
		(*in).DeepCopyInto(*out)
	}
	if in.ResolutionTime != nil {
		in, out := &in.ResolutionTime, &out.ResolutionTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictRecord.
func (in *ConflictRecord) DeepCopy() *ConflictRecord {
	if in == nil {
		return nil
	}
	out := new(ConflictRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictResolution) DeepCopyInto(out *ConflictResolution) {
	*out = *in
	if in.WinningPlacement != nil {
		in, out := &in.WinningPlacement, &out.WinningPlacement
		*out = new(PlacementReference)
		(*in).DeepCopyInto(*out)
	}
	if in.RejectedPlacements != nil {
		in, out := &in.RejectedPlacements, &out.RejectedPlacements
		*out = make([]PlacementReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictResolution.
func (in *ConflictResolution) DeepCopy() *ConflictResolution {
	if in == nil {
		return nil
	}
	out := new(ConflictResolution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictResolutionStrategy) DeepCopyInto(out *ConflictResolutionStrategy) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictResolutionStrategy.
func (in *ConflictResolutionStrategy) DeepCopy() *ConflictResolutionStrategy {
	if in == nil {
		return nil
	}
	out := new(ConflictResolutionStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictingVersion) DeepCopyInto(out *ConflictingVersion) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictingVersion.
func (in *ConflictingVersion) DeepCopy() *ConflictingVersion {
	if in == nil {
		return nil
	}
	out := new(ConflictingVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintEvaluation) DeepCopyInto(out *ConstraintEvaluation) {
	*out = *in
	in.EvaluationTime.DeepCopyInto(&out.EvaluationTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintEvaluation.
func (in *ConstraintEvaluation) DeepCopy() *ConstraintEvaluation {
	if in == nil {
		return nil
	}
	out := new(ConstraintEvaluation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionConflict) DeepCopyInto(out *DecisionConflict) {
	*out = *in
	if in.ConflictingDecision != nil {
		in, out := &in.ConflictingDecision, &out.ConflictingDecision
		*out = new(PlacementReference)
		(*in).DeepCopyInto(*out)
	}
	in.DetectedTime.DeepCopyInto(&out.DetectedTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionConflict.
func (in *DecisionConflict) DeepCopy() *DecisionConflict {
	if in == nil {
		return nil
	}
	out := new(DecisionConflict)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionConflictStatus) DeepCopyInto(out *DecisionConflictStatus) {
	*out = *in
	if in.ActiveConflicts != nil {
		in, out := &in.ActiveConflicts, &out.ActiveConflicts
		*out = make([]DecisionConflict, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResolvedConflicts != nil {
		in, out := &in.ResolvedConflicts, &out.ResolvedConflicts
		*out = make([]DecisionConflict, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastConflictTime != nil {
		in, out := &in.LastConflictTime, &out.LastConflictTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionConflictStatus.
func (in *DecisionConflictStatus) DeepCopy() *DecisionConflictStatus {
	if in == nil {
		return nil
	}
	out := new(DecisionConflictStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionContext) DeepCopyInto(out *DecisionContext) {
	*out = *in
	if in.EvaluatedClusters != nil {
		in, out := &in.EvaluatedClusters, &out.EvaluatedClusters
		*out = make([]ClusterEvaluation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppliedPolicies != nil {
		in, out := &in.AppliedPolicies, &out.AppliedPolicies
		*out = make([]AppliedPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConstraintEvaluations != nil {
		in, out := &in.ConstraintEvaluations, &out.ConstraintEvaluations
		*out = make([]ConstraintEvaluation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlternativePlacements != nil {
		in, out := &in.AlternativePlacements, &out.AlternativePlacements
		*out = make([]AlternativePlacement, len(*in))
		copy(*out, *in)
	}
	if in.DecisionMetrics != nil {
		in, out := &in.DecisionMetrics, &out.DecisionMetrics
		*out = new(DecisionMetrics)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionContext.
func (in *DecisionContext) DeepCopy() *DecisionContext {
	if in == nil {
		return nil
	}
	out := new(DecisionContext)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionExecutionStatus) DeepCopyInto(out *DecisionExecutionStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.ExecutionSteps != nil {
		in, out := &in.ExecutionSteps, &out.ExecutionSteps
		*out = make([]ExecutionStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionExecutionStatus.
func (in *DecisionExecutionStatus) DeepCopy() *DecisionExecutionStatus {
	if in == nil {
		return nil
	}
	out := new(DecisionExecutionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionMetrics) DeepCopyInto(out *DecisionMetrics) {
	*out = *in
	if in.EvaluationDuration != nil {
		in, out := &in.EvaluationDuration, &out.EvaluationDuration
		*out = new(v1.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionMetrics.
func (in *DecisionMetrics) DeepCopy() *DecisionMetrics {
	if in == nil {
		return nil
	}
	out := new(DecisionMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependencyValidationPolicy) DeepCopyInto(out *DependencyValidationPolicy) {
	*out = *in
	if in.DependencyTypes != nil {
		in, out := &in.DependencyTypes, &out.DependencyTypes
		*out = make([]DependencyType, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependencyValidationPolicy.
func (in *DependencyValidationPolicy) DeepCopy() *DependencyValidationPolicy {
	if in == nil {
		return nil
	}
	out := new(DependencyValidationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvaluationCriterion) DeepCopyInto(out *EvaluationCriterion) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvaluationCriterion.
func (in *EvaluationCriterion) DeepCopy() *EvaluationCriterion {
	if in == nil {
		return nil
	}
	out := new(EvaluationCriterion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionStep) DeepCopyInto(out *ExecutionStep) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionStep.
func (in *ExecutionStep) DeepCopy() *ExecutionStep {
	if in == nil {
		return nil
	}
	out := new(ExecutionStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelRef) DeepCopyInto(out *NotificationChannelRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelRef.
func (in *NotificationChannelRef) DeepCopy() *NotificationChannelRef {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectReference) DeepCopyInto(out *ObjectReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectReference.
func (in *ObjectReference) DeepCopy() *ObjectReference {
	if in == nil {
		return nil
	}
	out := new(ObjectReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseTransition) DeepCopyInto(out *PhaseTransition) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseTransition.
func (in *PhaseTransition) DeepCopy() *PhaseTransition {
	if in == nil {
		return nil
	}
	out := new(PhaseTransition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraint) DeepCopyInto(out *PlacementConstraint) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraint.
func (in *PlacementConstraint) DeepCopy() *PlacementConstraint {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementContext) DeepCopyInto(out *PlacementContext) {
	*out = *in
	if in.AvailableClusters != nil {
		in, out := &in.AvailableClusters, &out.AvailableClusters
		*out = make([]ClusterInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkloadRequirements != nil {
		in, out := &in.WorkloadRequirements, &out.WorkloadRequirements
		*out = make([]WorkloadRequirement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementHistory != nil {
		in, out := &in.PlacementHistory, &out.PlacementHistory
		*out = make([]PlacementHistoryEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConstraintEvaluations != nil {
		in, out := &in.ConstraintEvaluations, &out.ConstraintEvaluations
		*out = make([]ConstraintEvaluation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementContext.
func (in *PlacementContext) DeepCopy() *PlacementContext {
	if in == nil {
		return nil
	}
	out := new(PlacementContext)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecision) DeepCopyInto(out *PlacementDecision) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecision.
func (in *PlacementDecision) DeepCopy() *PlacementDecision {
	if in == nil {
		return nil
	}
	out := new(PlacementDecision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementDecision) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecisionList) DeepCopyInto(out *PlacementDecisionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PlacementDecision, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecisionList.
func (in *PlacementDecisionList) DeepCopy() *PlacementDecisionList {
	if in == nil {
		return nil
	}
	out := new(PlacementDecisionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementDecisionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecisionRef) DeepCopyInto(out *PlacementDecisionRef) {
	*out = *in
	in.CreationTimestamp.DeepCopyInto(&out.CreationTimestamp)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecisionRef.
func (in *PlacementDecisionRef) DeepCopy() *PlacementDecisionRef {
	if in == nil {
		return nil
	}
	out := new(PlacementDecisionRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecisionSpec) DeepCopyInto(out *PlacementDecisionSpec) {
	*out = *in
	out.SessionRef = in.SessionRef
	out.WorkloadRef = in.WorkloadRef
	if in.DecisionContext != nil {
		in, out := &in.DecisionContext, &out.DecisionContext
		*out = new(DecisionContext)
		(*in).DeepCopyInto(*out)
	}
	if in.RollbackPolicy != nil {
		in, out := &in.RollbackPolicy, &out.RollbackPolicy
		*out = new(RollbackPolicy)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecisionSpec.
func (in *PlacementDecisionSpec) DeepCopy() *PlacementDecisionSpec {
	if in == nil {
		return nil
	}
	out := new(PlacementDecisionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecisionStatus) DeepCopyInto(out *PlacementDecisionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditionsv1alpha1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionStatus != nil {
		in, out := &in.ExecutionStatus, &out.ExecutionStatus
		*out = new(DecisionExecutionStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.ConflictStatus != nil {
		in, out := &in.ConflictStatus, &out.ConflictStatus
		*out = new(DecisionConflictStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.RollbackStatus != nil {
		in, out := &in.RollbackStatus, &out.RollbackStatus
		*out = new(RollbackStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.DecisionTime != nil {
		in, out := &in.DecisionTime, &out.DecisionTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecisionStatus.
func (in *PlacementDecisionStatus) DeepCopy() *PlacementDecisionStatus {
	if in == nil {
		return nil
	}
	out := new(PlacementDecisionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementHistoryEntry) DeepCopyInto(out *PlacementHistoryEntry) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	out.WorkloadRef = in.WorkloadRef
	if in.PlacementScore != nil {
		in, out := &in.PlacementScore, &out.PlacementScore
		*out = new(float64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementHistoryEntry.
func (in *PlacementHistoryEntry) DeepCopy() *PlacementHistoryEntry {
	if in == nil {
		return nil
	}
	out := new(PlacementHistoryEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementPolicy) DeepCopyInto(out *PlacementPolicy) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]PlacementRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementPolicy.
func (in *PlacementPolicy) DeepCopy() *PlacementPolicy {
	if in == nil {
		return nil
	}
	out := new(PlacementPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementReference) DeepCopyInto(out *PlacementReference) {
	*out = *in
	if in.WorkloadRef != nil {
		in, out := &in.WorkloadRef, &out.WorkloadRef
		*out = new(WorkloadReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementReference.
func (in *PlacementReference) DeepCopy() *PlacementReference {
	if in == nil {
		return nil
	}
	out := new(PlacementReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementRule) DeepCopyInto(out *PlacementRule) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]PlacementConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementRule.
func (in *PlacementRule) DeepCopy() *PlacementRule {
	if in == nil {
		return nil
	}
	out := new(PlacementRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementRuleSelector) DeepCopyInto(out *PlacementRuleSelector) {
	*out = *in
	if in.WorkloadTypes != nil {
		in, out := &in.WorkloadTypes, &out.WorkloadTypes
		*out = make([]WorkloadType, len(*in))
		copy(*out, *in)
	}
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterNames != nil {
		in, out := &in.ClusterNames, &out.ClusterNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementRuleSelector.
func (in *PlacementRuleSelector) DeepCopy() *PlacementRuleSelector {
	if in == nil {
		return nil
	}
	out := new(PlacementRuleSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSession) DeepCopyInto(out *PlacementSession) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSession.
func (in *PlacementSession) DeepCopy() *PlacementSession {
	if in == nil {
		return nil
	}
	out := new(PlacementSession)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementSession) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSessionList) DeepCopyInto(out *PlacementSessionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PlacementSession, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSessionList.
func (in *PlacementSessionList) DeepCopy() *PlacementSessionList {
	if in == nil {
		return nil
	}
	out := new(PlacementSessionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementSessionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSessionSpec) DeepCopyInto(out *PlacementSessionSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	in.SessionConfiguration.DeepCopyInto(&out.SessionConfiguration)
	if in.PlacementPolicies != nil {
		in, out := &in.PlacementPolicies, &out.PlacementPolicies
		*out = make([]PlacementPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceConstraints != nil {
		in, out := &in.ResourceConstraints, &out.ResourceConstraints
		*out = new(ResourceConstraints)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSessionSpec.
func (in *PlacementSessionSpec) DeepCopy() *PlacementSessionSpec {
	if in == nil {
		return nil
	}
	out := new(PlacementSessionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSessionStatus) DeepCopyInto(out *PlacementSessionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditionsv1alpha1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ActiveDecisions != nil {
		in, out := &in.ActiveDecisions, &out.ActiveDecisions
		*out = make([]PlacementDecisionRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DecisionHistory != nil {
		in, out := &in.DecisionHistory, &out.DecisionHistory
		*out = make([]PlacementDecisionRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SessionMetrics != nil {
		in, out := &in.SessionMetrics, &out.SessionMetrics
		*out = new(SessionMetrics)
		(*in).DeepCopyInto(*out)
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSessionStatus.
func (in *PlacementSessionStatus) DeepCopy() *PlacementSessionStatus {
	if in == nil {
		return nil
	}
	out := new(PlacementSessionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaState) DeepCopyInto(out *ReplicaState) {
	*out = *in
	in.LastUpdateTime.DeepCopyInto(&out.LastUpdateTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaState.
func (in *ReplicaState) DeepCopy() *ReplicaState {
	if in == nil {
		return nil
	}
	out := new(ReplicaState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceAllocation) DeepCopyInto(out *ResourceAllocation) {
	*out = *in
	if in.AllocatedResources != nil {
		in, out := &in.AllocatedResources, &out.AllocatedResources
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.WorkloadAllocations != nil {
		in, out := &in.WorkloadAllocations, &out.WorkloadAllocations
		*out = make([]WorkloadAllocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.AllocationTime.DeepCopyInto(&out.AllocationTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceAllocation.
func (in *ResourceAllocation) DeepCopy() *ResourceAllocation {
	if in == nil {
		return nil
	}
	out := new(ResourceAllocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceConstraints) DeepCopyInto(out *ResourceConstraints) {
	*out = *in
	if in.CPULimits != nil {
		in, out := &in.CPULimits, &out.CPULimits
		*out = new(ResourceLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryLimits != nil {
		in, out := &in.MemoryLimits, &out.MemoryLimits
		*out = new(ResourceLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLimits != nil {
		in, out := &in.StorageLimits, &out.StorageLimits
		*out = new(ResourceLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomLimits != nil {
		in, out := &in.CustomLimits, &out.CustomLimits
		*out = make(map[string]ResourceLimit, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceConstraints.
func (in *ResourceConstraints) DeepCopy() *ResourceConstraints {
	if in == nil {
		return nil
	}
	out := new(ResourceConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimit) DeepCopyInto(out *ResourceLimit) {
	*out = *in
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		x := (*in).DeepCopy()
		*out = &x
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimit.
func (in *ResourceLimit) DeepCopy() *ResourceLimit {
	if in == nil {
		return nil
	}
	out := new(ResourceLimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceReservationPolicy) DeepCopyInto(out *ResourceReservationPolicy) {
	*out = *in
	out.ReservationDuration = in.ReservationDuration
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceReservationPolicy.
func (in *ResourceReservationPolicy) DeepCopy() *ResourceReservationPolicy {
	if in == nil {
		return nil
	}
	out := new(ResourceReservationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSelector) DeepCopyInto(out *ResourceSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSelector.
func (in *ResourceSelector) DeepCopy() *ResourceSelector {
	if in == nil {
		return nil
	}
	out := new(ResourceSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceThreshold) DeepCopyInto(out *ResourceThreshold) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceThreshold.
func (in *ResourceThreshold) DeepCopy() *ResourceThreshold {
	if in == nil {
		return nil
	}
	out := new(ResourceThreshold)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceValidationPolicy) DeepCopyInto(out *ResourceValidationPolicy) {
	*out = *in
	if in.CapacityThresholds != nil {
		in, out := &in.CapacityThresholds, &out.CapacityThresholds
		*out = make(map[string]ResourceThreshold, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ReservationPolicy != nil {
		in, out := &in.ReservationPolicy, &out.ReservationPolicy
		*out = new(ResourceReservationPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceValidationPolicy.
func (in *ResourceValidationPolicy) DeepCopy() *ResourceValidationPolicy {
	if in == nil {
		return nil
	}
	out := new(ResourceValidationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackOperation) DeepCopyInto(out *RollbackOperation) {
	*out = *in
	in.StartTime.DeepCopyInto(&out.StartTime)
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]RollbackStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackOperation.
func (in *RollbackOperation) DeepCopy() *RollbackOperation {
	if in == nil {
		return nil
	}
	out := new(RollbackOperation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackPolicy) DeepCopyInto(out *RollbackPolicy) {
	*out = *in
	if in.RollbackTriggers != nil {
		in, out := &in.RollbackTriggers, &out.RollbackTriggers
		*out = make([]RollbackTrigger, len(*in))
		copy(*out, *in)
	}
	out.RollbackTimeout = in.RollbackTimeout
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackPolicy.
func (in *RollbackPolicy) DeepCopy() *RollbackPolicy {
	if in == nil {
		return nil
	}
	out := new(RollbackPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackStatus) DeepCopyInto(out *RollbackStatus) {
	*out = *in
	if in.LastRollbackTime != nil {
		in, out := &in.LastRollbackTime, &out.LastRollbackTime
		*out = (*in).DeepCopy()
	}
	if in.RollbackHistory != nil {
		in, out := &in.RollbackHistory, &out.RollbackHistory
		*out = make([]RollbackOperation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CurrentRollback != nil {
		in, out := &in.CurrentRollback, &out.CurrentRollback
		*out = new(RollbackOperation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackStatus.
func (in *RollbackStatus) DeepCopy() *RollbackStatus {
	if in == nil {
		return nil
	}
	out := new(RollbackStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackStep) DeepCopyInto(out *RollbackStep) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackStep.
func (in *RollbackStep) DeepCopy() *RollbackStep {
	if in == nil {
		return nil
	}
	out := new(RollbackStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackTrigger) DeepCopyInto(out *RollbackTrigger) {
	*out = *in
	out.Duration = in.Duration
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackTrigger.
func (in *RollbackTrigger) DeepCopy() *RollbackTrigger {
	if in == nil {
		return nil
	}
	out := new(RollbackTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionConfiguration) DeepCopyInto(out *SessionConfiguration) {
	*out = *in
	out.SessionTimeout = in.SessionTimeout
	out.HeartbeatInterval = in.HeartbeatInterval
	if in.RecoveryPolicy != nil {
		in, out := &in.RecoveryPolicy, &out.RecoveryPolicy
		*out = new(SessionRecoveryPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionConfiguration.
func (in *SessionConfiguration) DeepCopy() *SessionConfiguration {
	if in == nil {
		return nil
	}
	out := new(SessionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionEvent) DeepCopyInto(out *SessionEvent) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	if in.RelatedObjects != nil {
		in, out := &in.RelatedObjects, &out.RelatedObjects
		*out = make([]ObjectReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionEvent.
func (in *SessionEvent) DeepCopy() *SessionEvent {
	if in == nil {
		return nil
	}
	out := new(SessionEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionMetrics) DeepCopyInto(out *SessionMetrics) {
	*out = *in
	if in.AverageDecisionTime != nil {
		in, out := &in.AverageDecisionTime, &out.AverageDecisionTime
		*out = new(v1.Duration)
		**out = **in
	}
	if in.SessionDuration != nil {
		in, out := &in.SessionDuration, &out.SessionDuration
		*out = new(v1.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionMetrics.
func (in *SessionMetrics) DeepCopy() *SessionMetrics {
	if in == nil {
		return nil
	}
	out := new(SessionMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionRecoveryPolicy) DeepCopyInto(out *SessionRecoveryPolicy) {
	*out = *in
	out.RetryDelay = in.RetryDelay
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionRecoveryPolicy.
func (in *SessionRecoveryPolicy) DeepCopy() *SessionRecoveryPolicy {
	if in == nil {
		return nil
	}
	out := new(SessionRecoveryPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionReference) DeepCopyInto(out *SessionReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionReference.
func (in *SessionReference) DeepCopy() *SessionReference {
	if in == nil {
		return nil
	}
	out := new(SessionReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionState) DeepCopyInto(out *SessionState) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionState.
func (in *SessionState) DeepCopy() *SessionState {
	if in == nil {
		return nil
	}
	out := new(SessionState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionState) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionStateData) DeepCopyInto(out *SessionStateData) {
	*out = *in
	if in.PhaseTransitions != nil {
		in, out := &in.PhaseTransitions, &out.PhaseTransitions
		*out = make([]PhaseTransition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementContext != nil {
		in, out := &in.PlacementContext, &out.PlacementContext
		*out = new(PlacementContext)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceAllocations != nil {
		in, out := &in.ResourceAllocations, &out.ResourceAllocations
		*out = make([]ResourceAllocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictHistory != nil {
		in, out := &in.ConflictHistory, &out.ConflictHistory
		*out = make([]ConflictRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SessionEvents != nil {
		in, out := &in.SessionEvents, &out.SessionEvents
		*out = make([]SessionEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Checkpoints != nil {
		in, out := &in.Checkpoints, &out.Checkpoints
		*out = make([]StateCheckpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionStateData.
func (in *SessionStateData) DeepCopy() *SessionStateData {
	if in == nil {
		return nil
	}
	out := new(SessionStateData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionStateList) DeepCopyInto(out *SessionStateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SessionState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionStateList.
func (in *SessionStateList) DeepCopy() *SessionStateList {
	if in == nil {
		return nil
	}
	out := new(SessionStateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionStateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionStateSpec) DeepCopyInto(out *SessionStateSpec) {
	*out = *in
	out.SessionRef = in.SessionRef
	in.StateData.DeepCopyInto(&out.StateData)
	if in.SyncPolicy != nil {
		in, out := &in.SyncPolicy, &out.SyncPolicy
		*out = new(StateSyncPolicy)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(StateRetentionPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionStateSpec.
func (in *SessionStateSpec) DeepCopy() *SessionStateSpec {
	if in == nil {
		return nil
	}
	out := new(SessionStateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionStateStatus) DeepCopyInto(out *SessionStateStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditionsv1alpha1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SyncStatus != nil {
		in, out := &in.SyncStatus, &out.SyncStatus
		*out = new(StateSyncStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.LastHeartbeat != nil {
		in, out := &in.LastHeartbeat, &out.LastHeartbeat
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionStateStatus.
func (in *SessionStateStatus) DeepCopy() *SessionStateStatus {
	if in == nil {
		return nil
	}
	out := new(SessionStateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionValidator) DeepCopyInto(out *SessionValidator) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionValidator.
func (in *SessionValidator) DeepCopy() *SessionValidator {
	if in == nil {
		return nil
	}
	out := new(SessionValidator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionValidator) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionValidatorList) DeepCopyInto(out *SessionValidatorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SessionValidator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionValidatorList.
func (in *SessionValidatorList) DeepCopy() *SessionValidatorList {
	if in == nil {
		return nil
	}
	out := new(SessionValidatorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionValidatorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionValidatorSpec) DeepCopyInto(out *SessionValidatorSpec) {
	*out = *in
	if in.ValidationRules != nil {
		in, out := &in.ValidationRules, &out.ValidationRules
		*out = make([]ValidationRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictDetection != nil {
		in, out := &in.ConflictDetection, &out.ConflictDetection
		*out = new(ConflictDetectionPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceValidation != nil {
		in, out := &in.ResourceValidation, &out.ResourceValidation
		*out = new(ResourceValidationPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.DependencyValidation != nil {
		in, out := &in.DependencyValidation, &out.DependencyValidation
		*out = new(DependencyValidationPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidationScope != nil {
		in, out := &in.ValidationScope, &out.ValidationScope
		*out = new(ValidationScope)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionValidatorSpec.
func (in *SessionValidatorSpec) DeepCopy() *SessionValidatorSpec {
	if in == nil {
		return nil
	}
	out := new(SessionValidatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionValidatorStatus) DeepCopyInto(out *SessionValidatorStatus) {
	*out = *in
	if in.ValidationResults != nil {
		in, out := &in.ValidationResults, &out.ValidationResults
		*out = make([]ValidationResult, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictDetections != nil {
		in, out := &in.ConflictDetections, &out.ConflictDetections
		*out = make([]ConflictDetection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastValidationTime != nil {
		in, out := &in.LastValidationTime, &out.LastValidationTime
		*out = (*in).DeepCopy()
	}
	if in.ValidationMetrics != nil {
		in, out := &in.ValidationMetrics, &out.ValidationMetrics
		*out = new(ValidationMetrics)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionValidatorStatus.
func (in *SessionValidatorStatus) DeepCopy() *SessionValidatorStatus {
	if in == nil {
		return nil
	}
	out := new(SessionValidatorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateCheckpoint) DeepCopyInto(out *StateCheckpoint) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateCheckpoint.
func (in *StateCheckpoint) DeepCopy() *StateCheckpoint {
	if in == nil {
		return nil
	}
	out := new(StateCheckpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateRetentionPolicy) DeepCopyInto(out *StateRetentionPolicy) {
	*out = *in
	out.RetentionPeriod = in.RetentionPeriod
	out.FailedSessionRetention = in.FailedSessionRetention
	out.CheckpointRetention = in.CheckpointRetention
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateRetentionPolicy.
func (in *StateRetentionPolicy) DeepCopy() *StateRetentionPolicy {
	if in == nil {
		return nil
	}
	out := new(StateRetentionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateSyncPolicy) DeepCopyInto(out *StateSyncPolicy) {
	*out = *in
	out.SyncInterval = in.SyncInterval
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateSyncPolicy.
func (in *StateSyncPolicy) DeepCopy() *StateSyncPolicy {
	if in == nil {
		return nil
	}
	out := new(StateSyncPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateSyncStatus) DeepCopyInto(out *StateSyncStatus) {
	*out = *in
	if in.LastSyncTime != nil {
		in, out := &in.LastSyncTime, &out.LastSyncTime
		*out = (*in).DeepCopy()
	}
	if in.ReplicaStates != nil {
		in, out := &in.ReplicaStates, &out.ReplicaStates
		*out = make([]ReplicaState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SyncConflicts != nil {
		in, out := &in.SyncConflicts, &out.SyncConflicts
		*out = make([]SyncConflict, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateSyncStatus.
func (in *StateSyncStatus) DeepCopy() *StateSyncStatus {
	if in == nil {
		return nil
	}
	out := new(StateSyncStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncConflict) DeepCopyInto(out *SyncConflict) {
	*out = *in
	in.DetectedTime.DeepCopyInto(&out.DetectedTime)
	if in.ConflictingVersions != nil {
		in, out := &in.ConflictingVersions, &out.ConflictingVersions
		*out = make([]ConflictingVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(SyncConflictResolution)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncConflict.
func (in *SyncConflict) DeepCopy() *SyncConflict {
	if in == nil {
		return nil
	}
	out := new(SyncConflict)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncConflictResolution) DeepCopyInto(out *SyncConflictResolution) {
	*out = *in
	in.ResolvedTime.DeepCopyInto(&out.ResolvedTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncConflictResolution.
func (in *SyncConflictResolution) DeepCopy() *SyncConflictResolution {
	if in == nil {
		return nil
	}
	out := new(SyncConflictResolution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationCondition) DeepCopyInto(out *ValidationCondition) {
	*out = *in
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]ValidationFilter, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationCondition.
func (in *ValidationCondition) DeepCopy() *ValidationCondition {
	if in == nil {
		return nil
	}
	out := new(ValidationCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationFilter) DeepCopyInto(out *ValidationFilter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationFilter.
func (in *ValidationFilter) DeepCopy() *ValidationFilter {
	if in == nil {
		return nil
	}
	out := new(ValidationFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationMetrics) DeepCopyInto(out *ValidationMetrics) {
	*out = *in
	if in.AverageValidationTime != nil {
		in, out := &in.AverageValidationTime, &out.AverageValidationTime
		*out = new(v1.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationMetrics.
func (in *ValidationMetrics) DeepCopy() *ValidationMetrics {
	if in == nil {
		return nil
	}
	out := new(ValidationMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationResult) DeepCopyInto(out *ValidationResult) {
	*out = *in
	in.ValidationTime.DeepCopyInto(&out.ValidationTime)
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.AffectedObjects != nil {
		in, out := &in.AffectedObjects, &out.AffectedObjects
		*out = make([]ObjectReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationResult.
func (in *ValidationResult) DeepCopy() *ValidationResult {
	if in == nil {
		return nil
	}
	out := new(ValidationResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationRetryPolicy) DeepCopyInto(out *ValidationRetryPolicy) {
	*out = *in
	out.RetryDelay = in.RetryDelay
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationRetryPolicy.
func (in *ValidationRetryPolicy) DeepCopy() *ValidationRetryPolicy {
	if in == nil {
		return nil
	}
	out := new(ValidationRetryPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationRule) DeepCopyInto(out *ValidationRule) {
	*out = *in
	in.Condition.DeepCopyInto(&out.Condition)
	in.Validator.DeepCopyInto(&out.Validator)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationRule.
func (in *ValidationRule) DeepCopy() *ValidationRule {
	if in == nil {
		return nil
	}
	out := new(ValidationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationScope) DeepCopyInto(out *ValidationScope) {
	*out = *in
	if in.IncludeNamespaces != nil {
		in, out := &in.IncludeNamespaces, &out.IncludeNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludeNamespaces != nil {
		in, out := &in.ExcludeNamespaces, &out.ExcludeNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludeClusters != nil {
		in, out := &in.IncludeClusters, &out.IncludeClusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludeClusters != nil {
		in, out := &in.ExcludeClusters, &out.ExcludeClusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceSelectors != nil {
		in, out := &in.ResourceSelectors, &out.ResourceSelectors
		*out = make([]ResourceSelector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationScope.
func (in *ValidationScope) DeepCopy() *ValidationScope {
	if in == nil {
		return nil
	}
	out := new(ValidationScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidatorConfiguration) DeepCopyInto(out *ValidatorConfiguration) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.Timeout = in.Timeout
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = new(ValidationRetryPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidatorConfiguration.
func (in *ValidatorConfiguration) DeepCopy() *ValidatorConfiguration {
	if in == nil {
		return nil
	}
	out := new(ValidatorConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadAllocation) DeepCopyInto(out *WorkloadAllocation) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
	if in.AllocatedResources != nil {
		in, out := &in.AllocatedResources, &out.AllocatedResources
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadAllocation.
func (in *WorkloadAllocation) DeepCopy() *WorkloadAllocation {
	if in == nil {
		return nil
	}
	out := new(WorkloadAllocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadReference) DeepCopyInto(out *WorkloadReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadReference.
func (in *WorkloadReference) DeepCopy() *WorkloadReference {
	if in == nil {
		return nil
	}
	out := new(WorkloadReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadRequirement) DeepCopyInto(out *WorkloadRequirement) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
	if in.ResourceRequirements != nil {
		in, out := &in.ResourceRequirements, &out.ResourceRequirements
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]PlacementConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadRequirement.
func (in *WorkloadRequirement) DeepCopy() *WorkloadRequirement {
	if in == nil {
		return nil
	}
	out := new(WorkloadRequirement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSelector) DeepCopyInto(out *WorkloadSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkloadTypes != nil {
		in, out := &in.WorkloadTypes, &out.WorkloadTypes
		*out = make([]WorkloadType, len(*in))
		copy(*out, *in)
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSelector.
func (in *WorkloadSelector) DeepCopy() *WorkloadSelector {
	if in == nil {
		return nil
	}
	out := new(WorkloadSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadType) DeepCopyInto(out *WorkloadType) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadType.
func (in *WorkloadType) DeepCopy() *WorkloadType {
	if in == nil {
		return nil
	}
	out := new(WorkloadType)
	in.DeepCopyInto(out)
	return out
}
