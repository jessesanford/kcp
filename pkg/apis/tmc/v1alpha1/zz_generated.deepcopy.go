//go:build !ignore_autogenerated

/*
Copyright The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	conditionsv1alpha1 "github.com/kcp-dev/kcp/sdk/apis/third_party/conditions/apis/conditions/v1alpha1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityRules) DeepCopyInto(out *AffinityRules) {
	*out = *in
	if in.ClusterAffinity != nil {
		in, out := &in.ClusterAffinity, &out.ClusterAffinity
		*out = new(ClusterAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterAntiAffinity != nil {
		in, out := &in.ClusterAntiAffinity, &out.ClusterAntiAffinity
		*out = new(ClusterAntiAffinity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityRules.
func (in *AffinityRules) DeepCopy() *AffinityRules {
	if in == nil {
		return nil
	}
	out := new(AffinityRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlueGreenStrategy) DeepCopyInto(out *BlueGreenStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlueGreenStrategy.
func (in *BlueGreenStrategy) DeepCopy() *BlueGreenStrategy {
	if in == nil {
		return nil
	}
	out := new(BlueGreenStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanaryStrategy) DeepCopyInto(out *CanaryStrategy) {
	*out = *in
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanaryStrategy.
func (in *CanaryStrategy) DeepCopy() *CanaryStrategy {
	if in == nil {
		return nil
	}
	out := new(CanaryStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAffinity) DeepCopyInto(out *ClusterAffinity) {
	*out = *in
	if in.RequiredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.RequiredDuringSchedulingIgnoredDuringExecution, &out.RequiredDuringSchedulingIgnoredDuringExecution
		*out = make([]ClusterAffinityTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.PreferredDuringSchedulingIgnoredDuringExecution, &out.PreferredDuringSchedulingIgnoredDuringExecution
		*out = make([]WeightedClusterAffinityTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAffinity.
func (in *ClusterAffinity) DeepCopy() *ClusterAffinity {
	if in == nil {
		return nil
	}
	out := new(ClusterAffinity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAffinityTerm) DeepCopyInto(out *ClusterAffinityTerm) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationSelector != nil {
		in, out := &in.LocationSelector, &out.LocationSelector
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAffinityTerm.
func (in *ClusterAffinityTerm) DeepCopy() *ClusterAffinityTerm {
	if in == nil {
		return nil
	}
	out := new(ClusterAffinityTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAntiAffinity) DeepCopyInto(out *ClusterAntiAffinity) {
	*out = *in
	if in.RequiredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.RequiredDuringSchedulingIgnoredDuringExecution, &out.RequiredDuringSchedulingIgnoredDuringExecution
		*out = make([]ClusterAffinityTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.PreferredDuringSchedulingIgnoredDuringExecution, &out.PreferredDuringSchedulingIgnoredDuringExecution
		*out = make([]WeightedClusterAffinityTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAntiAffinity.
func (in *ClusterAntiAffinity) DeepCopy() *ClusterAntiAffinity {
	if in == nil {
		return nil
	}
	out := new(ClusterAntiAffinity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterEndpoint) DeepCopyInto(out *ClusterEndpoint) {
	*out = *in
	if in.CABundle != nil {
		in, out := &in.CABundle, &out.CABundle
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterEndpoint.
func (in *ClusterEndpoint) DeepCopy() *ClusterEndpoint {
	if in == nil {
		return nil
	}
	out := new(ClusterEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistration) DeepCopyInto(out *ClusterRegistration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistration.
func (in *ClusterRegistration) DeepCopy() *ClusterRegistration {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterRegistration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationList) DeepCopyInto(out *ClusterRegistrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterRegistration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationList.
func (in *ClusterRegistrationList) DeepCopy() *ClusterRegistrationList {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterRegistrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationSpec) DeepCopyInto(out *ClusterRegistrationSpec) {
	*out = *in
	in.ClusterEndpoint.DeepCopyInto(&out.ClusterEndpoint)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationSpec.
func (in *ClusterRegistrationSpec) DeepCopy() *ClusterRegistrationSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationStatus) DeepCopyInto(out *ClusterRegistrationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationStatus.
func (in *ClusterRegistrationStatus) DeepCopy() *ClusterRegistrationStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelector) DeepCopyInto(out *ClusterSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationSelector != nil {
		in, out := &in.LocationSelector, &out.LocationSelector
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClusterNames != nil {
		in, out := &in.ClusterNames, &out.ClusterNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelector.
func (in *ClusterSelector) DeepCopy() *ClusterSelector {
	if in == nil {
		return nil
	}
	out := new(ClusterSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterWeight) DeepCopyInto(out *ClusterWeight) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterWeight.
func (in *ClusterWeight) DeepCopy() *ClusterWeight {
	if in == nil {
		return nil
	}
	out := new(ClusterWeight)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
<<<<<<< HEAD
=======
func (in *CommandHealthCheck) DeepCopyInto(out *CommandHealthCheck) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommandHealthCheck.
func (in *CommandHealthCheck) DeepCopy() *CommandHealthCheck {
	if in == nil {
		return nil
	}
	out := new(CommandHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContinuousSchedule) DeepCopyInto(out *ContinuousSchedule) {
	*out = *in
	out.Interval = in.Interval
	if in.MaxRuns != nil {
		in, out := &in.MaxRuns, &out.MaxRuns
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContinuousSchedule.
func (in *ContinuousSchedule) DeepCopy() *ContinuousSchedule {
	if in == nil {
		return nil
	}
	out := new(ContinuousSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialSecretRef) DeepCopyInto(out *CredentialSecretRef) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialSecretRef.
func (in *CredentialSecretRef) DeepCopy() *CredentialSecretRef {
	if in == nil {
		return nil
	}
	out := new(CredentialSecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronSchedule) DeepCopyInto(out *CronSchedule) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronSchedule.
func (in *CronSchedule) DeepCopy() *CronSchedule {
	if in == nil {
		return nil
	}
	out := new(CronSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomProvider) DeepCopyInto(out *CustomProvider) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(ProviderCredentials)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomProvider.
func (in *CustomProvider) DeepCopy() *CustomProvider {
	if in == nil {
		return nil
	}
	out := new(CustomProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataDogProvider) DeepCopyInto(out *DataDogProvider) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataDogProvider.
func (in *DataDogProvider) DeepCopy() *DataDogProvider {
	if in == nil {
		return nil
	}
	out := new(DataDogProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventTrigger) DeepCopyInto(out *EventTrigger) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]AnalysisEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.Debounce = in.Debounce
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventTrigger.
func (in *EventTrigger) DeepCopy() *EventTrigger {
	if in == nil {
		return nil
	}
	out := new(EventTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GRPCHealthCheck) DeepCopyInto(out *GRPCHealthCheck) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GRPCHealthCheck.
func (in *GRPCHealthCheck) DeepCopy() *GRPCHealthCheck {
	if in == nil {
		return nil
	}
	out := new(GRPCHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrafanaProvider) DeepCopyInto(out *GrafanaProvider) {
	*out = *in
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(ProviderCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrafanaProvider.
func (in *GrafanaProvider) DeepCopy() *GrafanaProvider {
	if in == nil {
		return nil
	}
	out := new(GrafanaProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheck) DeepCopyInto(out *HTTPHealthCheck) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExpectedStatusCodes != nil {
		in, out := &in.ExpectedStatusCodes, &out.ExpectedStatusCodes
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheck.
func (in *HTTPHealthCheck) DeepCopy() *HTTPHealthCheck {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckConfig) DeepCopyInto(out *HealthCheckConfig) {
	*out = *in
	out.Interval = in.Interval
	out.Timeout = in.Timeout
	if in.HTTPCheck != nil {
		in, out := &in.HTTPCheck, &out.HTTPCheck
		*out = new(HTTPHealthCheck)
		(*in).DeepCopyInto(*out)
	}
	if in.TCPCheck != nil {
		in, out := &in.TCPCheck, &out.TCPCheck
		*out = new(TCPHealthCheck)
		**out = **in
	}
	if in.GRPCCheck != nil {
		in, out := &in.GRPCCheck, &out.GRPCCheck
		*out = new(GRPCHealthCheck)
		**out = **in
	}
	if in.CommandCheck != nil {
		in, out := &in.CommandCheck, &out.CommandCheck
		*out = new(CommandHealthCheck)
		(*in).DeepCopyInto(*out)
	}
	if in.KubernetesCheck != nil {
		in, out := &in.KubernetesCheck, &out.KubernetesCheck
		*out = new(KubernetesHealthCheck)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckConfig.
func (in *HealthCheckConfig) DeepCopy() *HealthCheckConfig {
	if in == nil {
		return nil
	}
	out := new(HealthCheckConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckResult) DeepCopyInto(out *HealthCheckResult) {
	*out = *in
	in.LastCheckTime.DeepCopyInto(&out.LastCheckTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckResult.
func (in *HealthCheckResult) DeepCopy() *HealthCheckResult {
	if in == nil {
		return nil
	}
	out := new(HealthCheckResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthRecoveryPolicy) DeepCopyInto(out *HealthRecoveryPolicy) {
	*out = *in
	out.RecoveryDelay = in.RecoveryDelay
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthRecoveryPolicy.
func (in *HealthRecoveryPolicy) DeepCopy() *HealthRecoveryPolicy {
	if in == nil {
		return nil
	}
	out := new(HealthRecoveryPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthWorkloadReference) DeepCopyInto(out *HealthWorkloadReference) {
	*out = *in
	out.WorkloadReference = in.WorkloadReference
	in.LastHealthUpdate.DeepCopyInto(&out.LastHealthUpdate)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthWorkloadReference.
func (in *HealthWorkloadReference) DeepCopy() *HealthWorkloadReference {
	if in == nil {
		return nil
	}
	out := new(HealthWorkloadReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesHealthCheck) DeepCopyInto(out *KubernetesHealthCheck) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesHealthCheck.
func (in *KubernetesHealthCheck) DeepCopy() *KubernetesHealthCheck {
	if in == nil {
		return nil
	}
	out := new(KubernetesHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewRelicProvider) DeepCopyInto(out *NewRelicProvider) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewRelicProvider.
func (in *NewRelicProvider) DeepCopy() *NewRelicProvider {
	if in == nil {
		return nil
	}
	out := new(NewRelicProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
>>>>>>> 46569c53 (Add WorkloadHealthPolicy API for health monitoring)
func (in *PlacedWorkload) DeepCopyInto(out *PlacedWorkload) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
	in.PlacementTime.DeepCopyInto(&out.PlacementTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacedWorkload.
func (in *PlacedWorkload) DeepCopy() *PlacedWorkload {
	if in == nil {
		return nil
	}
	out := new(PlacedWorkload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacedWorkloadAdvanced) DeepCopyInto(out *PlacedWorkloadAdvanced) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
	in.PlacementTime.DeepCopyInto(&out.PlacementTime)
	if in.TrafficWeight != nil {
		in, out := &in.TrafficWeight, &out.TrafficWeight
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacedWorkloadAdvanced.
func (in *PlacedWorkloadAdvanced) DeepCopy() *PlacedWorkloadAdvanced {
	if in == nil {
		return nil
	}
	out := new(PlacedWorkloadAdvanced)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingUpdateStrategy) DeepCopyInto(out *RollingUpdateStrategy) {
	*out = *in
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(intstr.IntOrString)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingUpdateStrategy.
func (in *RollingUpdateStrategy) DeepCopy() *RollingUpdateStrategy {
	if in == nil {
		return nil
	}
	out := new(RollingUpdateStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutState) DeepCopyInto(out *RolloutState) {
	*out = *in
	if in.CurrentStep != nil {
		in, out := &in.CurrentStep, &out.CurrentStep
		*out = new(int32)
		**out = **in
	}
	if in.TotalSteps != nil {
		in, out := &in.TotalSteps, &out.TotalSteps
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutState.
func (in *RolloutState) DeepCopy() *RolloutState {
	if in == nil {
		return nil
	}
	out := new(RolloutState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutStrategy) DeepCopyInto(out *RolloutStrategy) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(RollingUpdateStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.BlueGreen != nil {
		in, out := &in.BlueGreen, &out.BlueGreen
		*out = new(BlueGreenStrategy)
		**out = **in
	}
	if in.Canary != nil {
		in, out := &in.Canary, &out.Canary
		*out = new(CanaryStrategy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutStrategy.
func (in *RolloutStrategy) DeepCopy() *RolloutStrategy {
	if in == nil {
		return nil
	}
	out := new(RolloutStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
<<<<<<< HEAD
=======
func (in *SuccessCriteria) DeepCopyInto(out *SuccessCriteria) {
	*out = *in
	if in.TolerancePercentage != nil {
		in, out := &in.TolerancePercentage, &out.TolerancePercentage
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuccessCriteria.
func (in *SuccessCriteria) DeepCopy() *SuccessCriteria {
	if in == nil {
		return nil
	}
	out := new(SuccessCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPHealthCheck) DeepCopyInto(out *TCPHealthCheck) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPHealthCheck.
func (in *TCPHealthCheck) DeepCopy() *TCPHealthCheck {
	if in == nil {
		return nil
	}
	out := new(TCPHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
>>>>>>> 46569c53 (Add WorkloadHealthPolicy API for health monitoring)
func (in *TrafficSplitting) DeepCopyInto(out *TrafficSplitting) {
	*out = *in
	if in.ClusterWeights != nil {
		in, out := &in.ClusterWeights, &out.ClusterWeights
		*out = make([]ClusterWeight, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficSplitting.
func (in *TrafficSplitting) DeepCopy() *TrafficSplitting {
	if in == nil {
		return nil
	}
	out := new(TrafficSplitting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficState) DeepCopyInto(out *TrafficState) {
	*out = *in
	if in.ActiveWeights != nil {
		in, out := &in.ActiveWeights, &out.ActiveWeights
		*out = make([]ClusterWeight, len(*in))
		copy(*out, *in)
	}
	if in.TargetWeights != nil {
		in, out := &in.TargetWeights, &out.TargetWeights
		*out = make([]ClusterWeight, len(*in))
		copy(*out, *in)
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficState.
func (in *TrafficState) DeepCopy() *TrafficState {
	if in == nil {
		return nil
	}
	out := new(TrafficState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedClusterAffinityTerm) DeepCopyInto(out *WeightedClusterAffinityTerm) {
	*out = *in
	in.ClusterAffinityTerm.DeepCopyInto(&out.ClusterAffinityTerm)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedClusterAffinityTerm.
func (in *WeightedClusterAffinityTerm) DeepCopy() *WeightedClusterAffinityTerm {
	if in == nil {
		return nil
	}
	out := new(WeightedClusterAffinityTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
<<<<<<< HEAD
=======
func (in *WorkloadAnalysisRun) DeepCopyInto(out *WorkloadAnalysisRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadAnalysisRun.
func (in *WorkloadAnalysisRun) DeepCopy() *WorkloadAnalysisRun {
	if in == nil {
		return nil
	}
	out := new(WorkloadAnalysisRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadAnalysisRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadAnalysisRunList) DeepCopyInto(out *WorkloadAnalysisRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadAnalysisRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadAnalysisRunList.
func (in *WorkloadAnalysisRunList) DeepCopy() *WorkloadAnalysisRunList {
	if in == nil {
		return nil
	}
	out := new(WorkloadAnalysisRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadAnalysisRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadAnalysisRunSpec) DeepCopyInto(out *WorkloadAnalysisRunSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	if in.AnalysisTemplates != nil {
		in, out := &in.AnalysisTemplates, &out.AnalysisTemplates
		*out = make([]AnalysisTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalysisSchedule != nil {
		in, out := &in.AnalysisSchedule, &out.AnalysisSchedule
		*out = new(AnalysisSchedule)
		(*in).DeepCopyInto(*out)
	}
	out.Timeout = in.Timeout
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadAnalysisRunSpec.
func (in *WorkloadAnalysisRunSpec) DeepCopy() *WorkloadAnalysisRunSpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadAnalysisRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadAnalysisRunStatus) DeepCopyInto(out *WorkloadAnalysisRunStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.FinishTime != nil {
		in, out := &in.FinishTime, &out.FinishTime
		*out = (*in).DeepCopy()
	}
	if in.OverallScore != nil {
		in, out := &in.OverallScore, &out.OverallScore
		*out = new(int32)
		**out = **in
	}
	if in.AnalysisResults != nil {
		in, out := &in.AnalysisResults, &out.AnalysisResults
		*out = make([]AnalysisResult, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadAnalysisRunStatus.
func (in *WorkloadAnalysisRunStatus) DeepCopy() *WorkloadAnalysisRunStatus {
	if in == nil {
		return nil
	}
	out := new(WorkloadAnalysisRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadHealthPolicy) DeepCopyInto(out *WorkloadHealthPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadHealthPolicy.
func (in *WorkloadHealthPolicy) DeepCopy() *WorkloadHealthPolicy {
	if in == nil {
		return nil
	}
	out := new(WorkloadHealthPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadHealthPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadHealthPolicyList) DeepCopyInto(out *WorkloadHealthPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadHealthPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadHealthPolicyList.
func (in *WorkloadHealthPolicyList) DeepCopy() *WorkloadHealthPolicyList {
	if in == nil {
		return nil
	}
	out := new(WorkloadHealthPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadHealthPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadHealthPolicySpec) DeepCopyInto(out *WorkloadHealthPolicySpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]HealthCheckConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryPolicy != nil {
		in, out := &in.RecoveryPolicy, &out.RecoveryPolicy
		*out = new(HealthRecoveryPolicy)
		**out = **in
	}
	out.GlobalTimeout = in.GlobalTimeout
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadHealthPolicySpec.
func (in *WorkloadHealthPolicySpec) DeepCopy() *WorkloadHealthPolicySpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadHealthPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadHealthPolicyStatus) DeepCopyInto(out *WorkloadHealthPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.OverallHealthScore != nil {
		in, out := &in.OverallHealthScore, &out.OverallHealthScore
		*out = new(int32)
		**out = **in
	}
	if in.HealthCheckResults != nil {
		in, out := &in.HealthCheckResults, &out.HealthCheckResults
		*out = make([]HealthCheckResult, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AffectedWorkloads != nil {
		in, out := &in.AffectedWorkloads, &out.AffectedWorkloads
		*out = make([]HealthWorkloadReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadHealthPolicyStatus.
func (in *WorkloadHealthPolicyStatus) DeepCopy() *WorkloadHealthPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(WorkloadHealthPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
>>>>>>> 46569c53 (Add WorkloadHealthPolicy API for health monitoring)
func (in *WorkloadPlacement) DeepCopyInto(out *WorkloadPlacement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacement.
func (in *WorkloadPlacement) DeepCopy() *WorkloadPlacement {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadPlacement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementAdvanced) DeepCopyInto(out *WorkloadPlacementAdvanced) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementAdvanced.
func (in *WorkloadPlacementAdvanced) DeepCopy() *WorkloadPlacementAdvanced {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementAdvanced)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadPlacementAdvanced) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementAdvancedList) DeepCopyInto(out *WorkloadPlacementAdvancedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadPlacementAdvanced, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementAdvancedList.
func (in *WorkloadPlacementAdvancedList) DeepCopy() *WorkloadPlacementAdvancedList {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementAdvancedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadPlacementAdvancedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementAdvancedSpec) DeepCopyInto(out *WorkloadPlacementAdvancedSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	if in.AffinityRules != nil {
		in, out := &in.AffinityRules, &out.AffinityRules
		*out = new(AffinityRules)
		(*in).DeepCopyInto(*out)
	}
	if in.RolloutStrategy != nil {
		in, out := &in.RolloutStrategy, &out.RolloutStrategy
		*out = new(RolloutStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficSplitting != nil {
		in, out := &in.TrafficSplitting, &out.TrafficSplitting
		*out = new(TrafficSplitting)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementAdvancedSpec.
func (in *WorkloadPlacementAdvancedSpec) DeepCopy() *WorkloadPlacementAdvancedSpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementAdvancedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementAdvancedStatus) DeepCopyInto(out *WorkloadPlacementAdvancedStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedClusters != nil {
		in, out := &in.SelectedClusters, &out.SelectedClusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PlacedWorkloads != nil {
		in, out := &in.PlacedWorkloads, &out.PlacedWorkloads
		*out = make([]PlacedWorkloadAdvanced, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RolloutState != nil {
		in, out := &in.RolloutState, &out.RolloutState
		*out = new(RolloutState)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficState != nil {
		in, out := &in.TrafficState, &out.TrafficState
		*out = new(TrafficState)
		(*in).DeepCopyInto(*out)
	}
	if in.LastPlacementTime != nil {
		in, out := &in.LastPlacementTime, &out.LastPlacementTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementAdvancedStatus.
func (in *WorkloadPlacementAdvancedStatus) DeepCopy() *WorkloadPlacementAdvancedStatus {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementAdvancedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementList) DeepCopyInto(out *WorkloadPlacementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadPlacement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementList.
func (in *WorkloadPlacementList) DeepCopy() *WorkloadPlacementList {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadPlacementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementSpec) DeepCopyInto(out *WorkloadPlacementSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementSpec.
func (in *WorkloadPlacementSpec) DeepCopy() *WorkloadPlacementSpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementStatus) DeepCopyInto(out *WorkloadPlacementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedClusters != nil {
		in, out := &in.SelectedClusters, &out.SelectedClusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PlacedWorkloads != nil {
		in, out := &in.PlacedWorkloads, &out.PlacedWorkloads
		*out = make([]PlacedWorkload, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastPlacementTime != nil {
		in, out := &in.LastPlacementTime, &out.LastPlacementTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementStatus.
func (in *WorkloadPlacementStatus) DeepCopy() *WorkloadPlacementStatus {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadReference) DeepCopyInto(out *WorkloadReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadReference.
func (in *WorkloadReference) DeepCopy() *WorkloadReference {
	if in == nil {
		return nil
	}
	out := new(WorkloadReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSelector) DeepCopyInto(out *WorkloadSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkloadTypes != nil {
		in, out := &in.WorkloadTypes, &out.WorkloadTypes
		*out = make([]WorkloadType, len(*in))
		copy(*out, *in)
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSelector.
func (in *WorkloadSelector) DeepCopy() *WorkloadSelector {
	if in == nil {
		return nil
	}
	out := new(WorkloadSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadType) DeepCopyInto(out *WorkloadType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadType.
func (in *WorkloadType) DeepCopy() *WorkloadType {
	if in == nil {
		return nil
	}
	out := new(WorkloadType)
	in.DeepCopyInto(out)
	return out
}
