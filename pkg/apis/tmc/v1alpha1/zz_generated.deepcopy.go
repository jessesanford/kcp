//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	conditionsv1alpha1 "github.com/kcp-dev/kcp/sdk/apis/third_party/conditions/apis/conditions/v1alpha1"
	resource "k8s.io/apimachinery/pkg/api/resource"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInfo) DeepCopyInto(out *ClusterInfo) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(ClusterLocation)
		**out = **in
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceCapacity != nil {
		in, out := &in.ResourceCapacity, &out.ResourceCapacity
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInfo.
func (in *ClusterInfo) DeepCopy() *ClusterInfo {
	if in == nil {
		return nil
	}
	out := new(ClusterInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLocation) DeepCopyInto(out *ClusterLocation) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLocation.
func (in *ClusterLocation) DeepCopy() *ClusterLocation {
	if in == nil {
		return nil
	}
	out := new(ClusterLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelector) DeepCopyInto(out *ClusterSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationSelector != nil {
		in, out := &in.LocationSelector, &out.LocationSelector
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClusterNames != nil {
		in, out := &in.ClusterNames, &out.ClusterNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelector.
func (in *ClusterSelector) DeepCopy() *ClusterSelector {
	if in == nil {
		return nil
	}
	out := new(ClusterSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictRecord) DeepCopyInto(out *ConflictRecord) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	if in.ConflictingPlacements != nil {
		in, out := &in.ConflictingPlacements, &out.ConflictingPlacements
		*out = make([]PlacementReference, len(*in))
		copy(*out, *in)
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(ConflictResolution)
		(*in).DeepCopyInto(*out)
	}
	if in.ResolutionTime != nil {
		in, out := &in.ResolutionTime, &out.ResolutionTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictRecord.
func (in *ConflictRecord) DeepCopy() *ConflictRecord {
	if in == nil {
		return nil
	}
	out := new(ConflictRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictResolution) DeepCopyInto(out *ConflictResolution) {
	*out = *in
	if in.WinningPlacement != nil {
		in, out := &in.WinningPlacement, &out.WinningPlacement
		*out = new(PlacementReference)
		**out = **in
	}
	if in.RejectedPlacements != nil {
		in, out := &in.RejectedPlacements, &out.RejectedPlacements
		*out = make([]PlacementReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictResolution.
func (in *ConflictResolution) DeepCopy() *ConflictResolution {
	if in == nil {
		return nil
	}
	out := new(ConflictResolution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictingVersion) DeepCopyInto(out *ConflictingVersion) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictingVersion.
func (in *ConflictingVersion) DeepCopy() *ConflictingVersion {
	if in == nil {
		return nil
	}
	out := new(ConflictingVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintEvaluation) DeepCopyInto(out *ConstraintEvaluation) {
	*out = *in
	in.EvaluationTime.DeepCopyInto(&out.EvaluationTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintEvaluation.
func (in *ConstraintEvaluation) DeepCopy() *ConstraintEvaluation {
	if in == nil {
		return nil
	}
	out := new(ConstraintEvaluation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectReference) DeepCopyInto(out *ObjectReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectReference.
func (in *ObjectReference) DeepCopy() *ObjectReference {
	if in == nil {
		return nil
	}
	out := new(ObjectReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseTransition) DeepCopyInto(out *PhaseTransition) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseTransition.
func (in *PhaseTransition) DeepCopy() *PhaseTransition {
	if in == nil {
		return nil
	}
	out := new(PhaseTransition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraint) DeepCopyInto(out *PlacementConstraint) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraint.
func (in *PlacementConstraint) DeepCopy() *PlacementConstraint {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementContext) DeepCopyInto(out *PlacementContext) {
	*out = *in
	if in.AvailableClusters != nil {
		in, out := &in.AvailableClusters, &out.AvailableClusters
		*out = make([]ClusterInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkloadRequirements != nil {
		in, out := &in.WorkloadRequirements, &out.WorkloadRequirements
		*out = make([]WorkloadRequirement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementHistory != nil {
		in, out := &in.PlacementHistory, &out.PlacementHistory
		*out = make([]PlacementHistoryEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConstraintEvaluations != nil {
		in, out := &in.ConstraintEvaluations, &out.ConstraintEvaluations
		*out = make([]ConstraintEvaluation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementContext.
func (in *PlacementContext) DeepCopy() *PlacementContext {
	if in == nil {
		return nil
	}
	out := new(PlacementContext)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecisionRef) DeepCopyInto(out *PlacementDecisionRef) {
	*out = *in
	in.CreationTimestamp.DeepCopyInto(&out.CreationTimestamp)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecisionRef.
func (in *PlacementDecisionRef) DeepCopy() *PlacementDecisionRef {
	if in == nil {
		return nil
	}
	out := new(PlacementDecisionRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementHistoryEntry) DeepCopyInto(out *PlacementHistoryEntry) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	out.WorkloadRef = in.WorkloadRef
	if in.PlacementScore != nil {
		in, out := &in.PlacementScore, &out.PlacementScore
		*out = new(float64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementHistoryEntry.
func (in *PlacementHistoryEntry) DeepCopy() *PlacementHistoryEntry {
	if in == nil {
		return nil
	}
	out := new(PlacementHistoryEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementPolicy) DeepCopyInto(out *PlacementPolicy) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]PlacementRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementPolicy.
func (in *PlacementPolicy) DeepCopy() *PlacementPolicy {
	if in == nil {
		return nil
	}
	out := new(PlacementPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementReference) DeepCopyInto(out *PlacementReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementReference.
func (in *PlacementReference) DeepCopy() *PlacementReference {
	if in == nil {
		return nil
	}
	out := new(PlacementReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementRule) DeepCopyInto(out *PlacementRule) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]PlacementConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementRule.
func (in *PlacementRule) DeepCopy() *PlacementRule {
	if in == nil {
		return nil
	}
	out := new(PlacementRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementRuleSelector) DeepCopyInto(out *PlacementRuleSelector) {
	*out = *in
	if in.WorkloadTypes != nil {
		in, out := &in.WorkloadTypes, &out.WorkloadTypes
		*out = make([]WorkloadType, len(*in))
		copy(*out, *in)
	}
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterNames != nil {
		in, out := &in.ClusterNames, &out.ClusterNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementRuleSelector.
func (in *PlacementRuleSelector) DeepCopy() *PlacementRuleSelector {
	if in == nil {
		return nil
	}
	out := new(PlacementRuleSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSession) DeepCopyInto(out *PlacementSession) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSession.
func (in *PlacementSession) DeepCopy() *PlacementSession {
	if in == nil {
		return nil
	}
	out := new(PlacementSession)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementSession) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSessionList) DeepCopyInto(out *PlacementSessionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PlacementSession, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSessionList.
func (in *PlacementSessionList) DeepCopy() *PlacementSessionList {
	if in == nil {
		return nil
	}
	out := new(PlacementSessionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementSessionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSessionSpec) DeepCopyInto(out *PlacementSessionSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	in.SessionConfiguration.DeepCopyInto(&out.SessionConfiguration)
	if in.PlacementPolicies != nil {
		in, out := &in.PlacementPolicies, &out.PlacementPolicies
		*out = make([]PlacementPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceConstraints != nil {
		in, out := &in.ResourceConstraints, &out.ResourceConstraints
		*out = new(ResourceConstraints)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSessionSpec.
func (in *PlacementSessionSpec) DeepCopy() *PlacementSessionSpec {
	if in == nil {
		return nil
	}
	out := new(PlacementSessionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSessionStatus) DeepCopyInto(out *PlacementSessionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditionsv1alpha1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ActiveDecisions != nil {
		in, out := &in.ActiveDecisions, &out.ActiveDecisions
		*out = make([]PlacementDecisionRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DecisionHistory != nil {
		in, out := &in.DecisionHistory, &out.DecisionHistory
		*out = make([]PlacementDecisionRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SessionMetrics != nil {
		in, out := &in.SessionMetrics, &out.SessionMetrics
		*out = new(SessionMetrics)
		(*in).DeepCopyInto(*out)
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSessionStatus.
func (in *PlacementSessionStatus) DeepCopy() *PlacementSessionStatus {
	if in == nil {
		return nil
	}
	out := new(PlacementSessionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaState) DeepCopyInto(out *ReplicaState) {
	*out = *in
	in.LastUpdateTime.DeepCopyInto(&out.LastUpdateTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaState.
func (in *ReplicaState) DeepCopy() *ReplicaState {
	if in == nil {
		return nil
	}
	out := new(ReplicaState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceAllocation) DeepCopyInto(out *ResourceAllocation) {
	*out = *in
	if in.AllocatedResources != nil {
		in, out := &in.AllocatedResources, &out.AllocatedResources
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.WorkloadAllocations != nil {
		in, out := &in.WorkloadAllocations, &out.WorkloadAllocations
		*out = make([]WorkloadAllocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.AllocationTime.DeepCopyInto(&out.AllocationTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceAllocation.
func (in *ResourceAllocation) DeepCopy() *ResourceAllocation {
	if in == nil {
		return nil
	}
	out := new(ResourceAllocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceConstraints) DeepCopyInto(out *ResourceConstraints) {
	*out = *in
	if in.CPULimits != nil {
		in, out := &in.CPULimits, &out.CPULimits
		*out = new(ResourceLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryLimits != nil {
		in, out := &in.MemoryLimits, &out.MemoryLimits
		*out = new(ResourceLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLimits != nil {
		in, out := &in.StorageLimits, &out.StorageLimits
		*out = new(ResourceLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomLimits != nil {
		in, out := &in.CustomLimits, &out.CustomLimits
		*out = make(map[string]ResourceLimit, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceConstraints.
func (in *ResourceConstraints) DeepCopy() *ResourceConstraints {
	if in == nil {
		return nil
	}
	out := new(ResourceConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimit) DeepCopyInto(out *ResourceLimit) {
	*out = *in
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		x := (*in).DeepCopy()
		*out = &x
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimit.
func (in *ResourceLimit) DeepCopy() *ResourceLimit {
	if in == nil {
		return nil
	}
	out := new(ResourceLimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionConfiguration) DeepCopyInto(out *SessionConfiguration) {
	*out = *in
	out.SessionTimeout = in.SessionTimeout
	out.HeartbeatInterval = in.HeartbeatInterval
	if in.RecoveryPolicy != nil {
		in, out := &in.RecoveryPolicy, &out.RecoveryPolicy
		*out = new(SessionRecoveryPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionConfiguration.
func (in *SessionConfiguration) DeepCopy() *SessionConfiguration {
	if in == nil {
		return nil
	}
	out := new(SessionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionEvent) DeepCopyInto(out *SessionEvent) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	if in.RelatedObjects != nil {
		in, out := &in.RelatedObjects, &out.RelatedObjects
		*out = make([]ObjectReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionEvent.
func (in *SessionEvent) DeepCopy() *SessionEvent {
	if in == nil {
		return nil
	}
	out := new(SessionEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionMetrics) DeepCopyInto(out *SessionMetrics) {
	*out = *in
	if in.AverageDecisionTime != nil {
		in, out := &in.AverageDecisionTime, &out.AverageDecisionTime
		*out = new(v1.Duration)
		**out = **in
	}
	if in.SessionDuration != nil {
		in, out := &in.SessionDuration, &out.SessionDuration
		*out = new(v1.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionMetrics.
func (in *SessionMetrics) DeepCopy() *SessionMetrics {
	if in == nil {
		return nil
	}
	out := new(SessionMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionRecoveryPolicy) DeepCopyInto(out *SessionRecoveryPolicy) {
	*out = *in
	out.RetryDelay = in.RetryDelay
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionRecoveryPolicy.
func (in *SessionRecoveryPolicy) DeepCopy() *SessionRecoveryPolicy {
	if in == nil {
		return nil
	}
	out := new(SessionRecoveryPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionReference) DeepCopyInto(out *SessionReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionReference.
func (in *SessionReference) DeepCopy() *SessionReference {
	if in == nil {
		return nil
	}
	out := new(SessionReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionState) DeepCopyInto(out *SessionState) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionState.
func (in *SessionState) DeepCopy() *SessionState {
	if in == nil {
		return nil
	}
	out := new(SessionState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionState) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionStateData) DeepCopyInto(out *SessionStateData) {
	*out = *in
	if in.PhaseTransitions != nil {
		in, out := &in.PhaseTransitions, &out.PhaseTransitions
		*out = make([]PhaseTransition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementContext != nil {
		in, out := &in.PlacementContext, &out.PlacementContext
		*out = new(PlacementContext)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceAllocations != nil {
		in, out := &in.ResourceAllocations, &out.ResourceAllocations
		*out = make([]ResourceAllocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictHistory != nil {
		in, out := &in.ConflictHistory, &out.ConflictHistory
		*out = make([]ConflictRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SessionEvents != nil {
		in, out := &in.SessionEvents, &out.SessionEvents
		*out = make([]SessionEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Checkpoints != nil {
		in, out := &in.Checkpoints, &out.Checkpoints
		*out = make([]StateCheckpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionStateData.
func (in *SessionStateData) DeepCopy() *SessionStateData {
	if in == nil {
		return nil
	}
	out := new(SessionStateData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionStateList) DeepCopyInto(out *SessionStateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SessionState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionStateList.
func (in *SessionStateList) DeepCopy() *SessionStateList {
	if in == nil {
		return nil
	}
	out := new(SessionStateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SessionStateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionStateSpec) DeepCopyInto(out *SessionStateSpec) {
	*out = *in
	out.SessionRef = in.SessionRef
	in.StateData.DeepCopyInto(&out.StateData)
	if in.SyncPolicy != nil {
		in, out := &in.SyncPolicy, &out.SyncPolicy
		*out = new(StateSyncPolicy)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(StateRetentionPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionStateSpec.
func (in *SessionStateSpec) DeepCopy() *SessionStateSpec {
	if in == nil {
		return nil
	}
	out := new(SessionStateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionStateStatus) DeepCopyInto(out *SessionStateStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditionsv1alpha1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SyncStatus != nil {
		in, out := &in.SyncStatus, &out.SyncStatus
		*out = new(StateSyncStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.LastHeartbeat != nil {
		in, out := &in.LastHeartbeat, &out.LastHeartbeat
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionStateStatus.
func (in *SessionStateStatus) DeepCopy() *SessionStateStatus {
	if in == nil {
		return nil
	}
	out := new(SessionStateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateCheckpoint) DeepCopyInto(out *StateCheckpoint) {
	*out = *in
	in.Timestamp.DeepCopyInto(&out.Timestamp)
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateCheckpoint.
func (in *StateCheckpoint) DeepCopy() *StateCheckpoint {
	if in == nil {
		return nil
	}
	out := new(StateCheckpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateRetentionPolicy) DeepCopyInto(out *StateRetentionPolicy) {
	*out = *in
	out.RetentionPeriod = in.RetentionPeriod
	out.FailedSessionRetention = in.FailedSessionRetention
	out.CheckpointRetention = in.CheckpointRetention
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateRetentionPolicy.
func (in *StateRetentionPolicy) DeepCopy() *StateRetentionPolicy {
	if in == nil {
		return nil
	}
	out := new(StateRetentionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateSyncPolicy) DeepCopyInto(out *StateSyncPolicy) {
	*out = *in
	out.SyncInterval = in.SyncInterval
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateSyncPolicy.
func (in *StateSyncPolicy) DeepCopy() *StateSyncPolicy {
	if in == nil {
		return nil
	}
	out := new(StateSyncPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateSyncStatus) DeepCopyInto(out *StateSyncStatus) {
	*out = *in
	if in.LastSyncTime != nil {
		in, out := &in.LastSyncTime, &out.LastSyncTime
		*out = (*in).DeepCopy()
	}
	if in.ReplicaStates != nil {
		in, out := &in.ReplicaStates, &out.ReplicaStates
		*out = make([]ReplicaState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SyncConflicts != nil {
		in, out := &in.SyncConflicts, &out.SyncConflicts
		*out = make([]SyncConflict, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateSyncStatus.
func (in *StateSyncStatus) DeepCopy() *StateSyncStatus {
	if in == nil {
		return nil
	}
	out := new(StateSyncStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncConflict) DeepCopyInto(out *SyncConflict) {
	*out = *in
	in.DetectedTime.DeepCopyInto(&out.DetectedTime)
	if in.ConflictingVersions != nil {
		in, out := &in.ConflictingVersions, &out.ConflictingVersions
		*out = make([]ConflictingVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(SyncConflictResolution)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncConflict.
func (in *SyncConflict) DeepCopy() *SyncConflict {
	if in == nil {
		return nil
	}
	out := new(SyncConflict)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncConflictResolution) DeepCopyInto(out *SyncConflictResolution) {
	*out = *in
	in.ResolvedTime.DeepCopyInto(&out.ResolvedTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncConflictResolution.
func (in *SyncConflictResolution) DeepCopy() *SyncConflictResolution {
	if in == nil {
		return nil
	}
	out := new(SyncConflictResolution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadAllocation) DeepCopyInto(out *WorkloadAllocation) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
	if in.AllocatedResources != nil {
		in, out := &in.AllocatedResources, &out.AllocatedResources
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadAllocation.
func (in *WorkloadAllocation) DeepCopy() *WorkloadAllocation {
	if in == nil {
		return nil
	}
	out := new(WorkloadAllocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadReference) DeepCopyInto(out *WorkloadReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadReference.
func (in *WorkloadReference) DeepCopy() *WorkloadReference {
	if in == nil {
		return nil
	}
	out := new(WorkloadReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadRequirement) DeepCopyInto(out *WorkloadRequirement) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
	if in.ResourceRequirements != nil {
		in, out := &in.ResourceRequirements, &out.ResourceRequirements
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]PlacementConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadRequirement.
func (in *WorkloadRequirement) DeepCopy() *WorkloadRequirement {
	if in == nil {
		return nil
	}
	out := new(WorkloadRequirement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSelector) DeepCopyInto(out *WorkloadSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkloadTypes != nil {
		in, out := &in.WorkloadTypes, &out.WorkloadTypes
		*out = make([]WorkloadType, len(*in))
		copy(*out, *in)
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSelector.
func (in *WorkloadSelector) DeepCopy() *WorkloadSelector {
	if in == nil {
		return nil
	}
	out := new(WorkloadSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadType) DeepCopyInto(out *WorkloadType) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadType.
func (in *WorkloadType) DeepCopy() *WorkloadType {
	if in == nil {
		return nil
	}
	out := new(WorkloadType)
	in.DeepCopyInto(out)
	return out
}
