//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	conditionsv1alpha1 "github.com/kcp-dev/kcp/sdk/apis/third_party/conditions/apis/conditions/v1alpha1"
	resource "k8s.io/apimachinery/pkg/api/resource"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternativePlacement) DeepCopyInto(out *AlternativePlacement) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternativePlacement.
func (in *AlternativePlacement) DeepCopy() *AlternativePlacement {
	if in == nil {
		return nil
	}
	out := new(AlternativePlacement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppliedPolicy) DeepCopyInto(out *AppliedPolicy) {
	*out = *in
	if in.AppliedRules != nil {
		in, out := &in.AppliedRules, &out.AppliedRules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppliedPolicy.
func (in *AppliedPolicy) DeepCopy() *AppliedPolicy {
	if in == nil {
		return nil
	}
	out := new(AppliedPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterEvaluation) DeepCopyInto(out *ClusterEvaluation) {
	*out = *in
	if in.EvaluationCriteria != nil {
		in, out := &in.EvaluationCriteria, &out.EvaluationCriteria
		*out = make([]EvaluationCriterion, len(*in))
		copy(*out, *in)
	}
	if in.ResourceAvailability != nil {
		in, out := &in.ResourceAvailability, &out.ResourceAvailability
		*out = make(map[string]resource.Quantity, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.RejectionReasons != nil {
		in, out := &in.RejectionReasons, &out.RejectionReasons
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterEvaluation.
func (in *ClusterEvaluation) DeepCopy() *ClusterEvaluation {
	if in == nil {
		return nil
	}
	out := new(ClusterEvaluation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelector) DeepCopyInto(out *ClusterSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationSelector != nil {
		in, out := &in.LocationSelector, &out.LocationSelector
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClusterNames != nil {
		in, out := &in.ClusterNames, &out.ClusterNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelector.
func (in *ClusterSelector) DeepCopy() *ClusterSelector {
	if in == nil {
		return nil
	}
	out := new(ClusterSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintEvaluation) DeepCopyInto(out *ConstraintEvaluation) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintEvaluation.
func (in *ConstraintEvaluation) DeepCopy() *ConstraintEvaluation {
	if in == nil {
		return nil
	}
	out := new(ConstraintEvaluation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionConflict) DeepCopyInto(out *DecisionConflict) {
	*out = *in
	if in.ConflictingDecision != nil {
		in, out := &in.ConflictingDecision, &out.ConflictingDecision
		*out = new(PlacementReference)
		**out = **in
	}
	in.DetectedTime.DeepCopyInto(&out.DetectedTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionConflict.
func (in *DecisionConflict) DeepCopy() *DecisionConflict {
	if in == nil {
		return nil
	}
	out := new(DecisionConflict)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionConflictStatus) DeepCopyInto(out *DecisionConflictStatus) {
	*out = *in
	if in.ActiveConflicts != nil {
		in, out := &in.ActiveConflicts, &out.ActiveConflicts
		*out = make([]DecisionConflict, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResolvedConflicts != nil {
		in, out := &in.ResolvedConflicts, &out.ResolvedConflicts
		*out = make([]DecisionConflict, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastConflictTime != nil {
		in, out := &in.LastConflictTime, &out.LastConflictTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionConflictStatus.
func (in *DecisionConflictStatus) DeepCopy() *DecisionConflictStatus {
	if in == nil {
		return nil
	}
	out := new(DecisionConflictStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionContext) DeepCopyInto(out *DecisionContext) {
	*out = *in
	if in.EvaluatedClusters != nil {
		in, out := &in.EvaluatedClusters, &out.EvaluatedClusters
		*out = make([]ClusterEvaluation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppliedPolicies != nil {
		in, out := &in.AppliedPolicies, &out.AppliedPolicies
		*out = make([]AppliedPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConstraintEvaluations != nil {
		in, out := &in.ConstraintEvaluations, &out.ConstraintEvaluations
		*out = make([]ConstraintEvaluation, len(*in))
		copy(*out, *in)
	}
	if in.AlternativePlacements != nil {
		in, out := &in.AlternativePlacements, &out.AlternativePlacements
		*out = make([]AlternativePlacement, len(*in))
		copy(*out, *in)
	}
	if in.DecisionMetrics != nil {
		in, out := &in.DecisionMetrics, &out.DecisionMetrics
		*out = new(DecisionMetrics)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionContext.
func (in *DecisionContext) DeepCopy() *DecisionContext {
	if in == nil {
		return nil
	}
	out := new(DecisionContext)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionExecutionStatus) DeepCopyInto(out *DecisionExecutionStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.ExecutionSteps != nil {
		in, out := &in.ExecutionSteps, &out.ExecutionSteps
		*out = make([]ExecutionStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionExecutionStatus.
func (in *DecisionExecutionStatus) DeepCopy() *DecisionExecutionStatus {
	if in == nil {
		return nil
	}
	out := new(DecisionExecutionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecisionMetrics) DeepCopyInto(out *DecisionMetrics) {
	*out = *in
	if in.EvaluationDuration != nil {
		in, out := &in.EvaluationDuration, &out.EvaluationDuration
		*out = new(v1.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecisionMetrics.
func (in *DecisionMetrics) DeepCopy() *DecisionMetrics {
	if in == nil {
		return nil
	}
	out := new(DecisionMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvaluationCriterion) DeepCopyInto(out *EvaluationCriterion) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvaluationCriterion.
func (in *EvaluationCriterion) DeepCopy() *EvaluationCriterion {
	if in == nil {
		return nil
	}
	out := new(EvaluationCriterion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionStep) DeepCopyInto(out *ExecutionStep) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionStep.
func (in *ExecutionStep) DeepCopy() *ExecutionStep {
	if in == nil {
		return nil
	}
	out := new(ExecutionStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectReference) DeepCopyInto(out *ObjectReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectReference.
func (in *ObjectReference) DeepCopy() *ObjectReference {
	if in == nil {
		return nil
	}
	out := new(ObjectReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraint) DeepCopyInto(out *PlacementConstraint) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraint.
func (in *PlacementConstraint) DeepCopy() *PlacementConstraint {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecision) DeepCopyInto(out *PlacementDecision) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecision.
func (in *PlacementDecision) DeepCopy() *PlacementDecision {
	if in == nil {
		return nil
	}
	out := new(PlacementDecision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementDecision) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecisionList) DeepCopyInto(out *PlacementDecisionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PlacementDecision, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecisionList.
func (in *PlacementDecisionList) DeepCopy() *PlacementDecisionList {
	if in == nil {
		return nil
	}
	out := new(PlacementDecisionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementDecisionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecisionRef) DeepCopyInto(out *PlacementDecisionRef) {
	*out = *in
	in.CreationTimestamp.DeepCopyInto(&out.CreationTimestamp)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecisionRef.
func (in *PlacementDecisionRef) DeepCopy() *PlacementDecisionRef {
	if in == nil {
		return nil
	}
	out := new(PlacementDecisionRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecisionSpec) DeepCopyInto(out *PlacementDecisionSpec) {
	*out = *in
	out.SessionRef = in.SessionRef
	out.WorkloadRef = in.WorkloadRef
	if in.DecisionContext != nil {
		in, out := &in.DecisionContext, &out.DecisionContext
		*out = new(DecisionContext)
		(*in).DeepCopyInto(*out)
	}
	if in.RollbackPolicy != nil {
		in, out := &in.RollbackPolicy, &out.RollbackPolicy
		*out = new(RollbackPolicy)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecisionSpec.
func (in *PlacementDecisionSpec) DeepCopy() *PlacementDecisionSpec {
	if in == nil {
		return nil
	}
	out := new(PlacementDecisionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDecisionStatus) DeepCopyInto(out *PlacementDecisionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditionsv1alpha1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionStatus != nil {
		in, out := &in.ExecutionStatus, &out.ExecutionStatus
		*out = new(DecisionExecutionStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.ConflictStatus != nil {
		in, out := &in.ConflictStatus, &out.ConflictStatus
		*out = new(DecisionConflictStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.RollbackStatus != nil {
		in, out := &in.RollbackStatus, &out.RollbackStatus
		*out = new(RollbackStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.DecisionTime != nil {
		in, out := &in.DecisionTime, &out.DecisionTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDecisionStatus.
func (in *PlacementDecisionStatus) DeepCopy() *PlacementDecisionStatus {
	if in == nil {
		return nil
	}
	out := new(PlacementDecisionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementPolicy) DeepCopyInto(out *PlacementPolicy) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]PlacementRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementPolicy.
func (in *PlacementPolicy) DeepCopy() *PlacementPolicy {
	if in == nil {
		return nil
	}
	out := new(PlacementPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementReference) DeepCopyInto(out *PlacementReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementReference.
func (in *PlacementReference) DeepCopy() *PlacementReference {
	if in == nil {
		return nil
	}
	out := new(PlacementReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementRule) DeepCopyInto(out *PlacementRule) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]PlacementConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementRule.
func (in *PlacementRule) DeepCopy() *PlacementRule {
	if in == nil {
		return nil
	}
	out := new(PlacementRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementRuleSelector) DeepCopyInto(out *PlacementRuleSelector) {
	*out = *in
	if in.WorkloadTypes != nil {
		in, out := &in.WorkloadTypes, &out.WorkloadTypes
		*out = make([]WorkloadType, len(*in))
		copy(*out, *in)
	}
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterNames != nil {
		in, out := &in.ClusterNames, &out.ClusterNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementRuleSelector.
func (in *PlacementRuleSelector) DeepCopy() *PlacementRuleSelector {
	if in == nil {
		return nil
	}
	out := new(PlacementRuleSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSession) DeepCopyInto(out *PlacementSession) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSession.
func (in *PlacementSession) DeepCopy() *PlacementSession {
	if in == nil {
		return nil
	}
	out := new(PlacementSession)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementSession) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSessionList) DeepCopyInto(out *PlacementSessionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PlacementSession, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSessionList.
func (in *PlacementSessionList) DeepCopy() *PlacementSessionList {
	if in == nil {
		return nil
	}
	out := new(PlacementSessionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementSessionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSessionSpec) DeepCopyInto(out *PlacementSessionSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	in.SessionConfiguration.DeepCopyInto(&out.SessionConfiguration)
	if in.PlacementPolicies != nil {
		in, out := &in.PlacementPolicies, &out.PlacementPolicies
		*out = make([]PlacementPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceConstraints != nil {
		in, out := &in.ResourceConstraints, &out.ResourceConstraints
		*out = new(ResourceConstraints)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSessionSpec.
func (in *PlacementSessionSpec) DeepCopy() *PlacementSessionSpec {
	if in == nil {
		return nil
	}
	out := new(PlacementSessionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSessionStatus) DeepCopyInto(out *PlacementSessionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditionsv1alpha1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ActiveDecisions != nil {
		in, out := &in.ActiveDecisions, &out.ActiveDecisions
		*out = make([]PlacementDecisionRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DecisionHistory != nil {
		in, out := &in.DecisionHistory, &out.DecisionHistory
		*out = make([]PlacementDecisionRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SessionMetrics != nil {
		in, out := &in.SessionMetrics, &out.SessionMetrics
		*out = new(SessionMetrics)
		(*in).DeepCopyInto(*out)
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSessionStatus.
func (in *PlacementSessionStatus) DeepCopy() *PlacementSessionStatus {
	if in == nil {
		return nil
	}
	out := new(PlacementSessionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceConstraints) DeepCopyInto(out *ResourceConstraints) {
	*out = *in
	if in.CPULimits != nil {
		in, out := &in.CPULimits, &out.CPULimits
		*out = new(ResourceLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryLimits != nil {
		in, out := &in.MemoryLimits, &out.MemoryLimits
		*out = new(ResourceLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLimits != nil {
		in, out := &in.StorageLimits, &out.StorageLimits
		*out = new(ResourceLimit)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomLimits != nil {
		in, out := &in.CustomLimits, &out.CustomLimits
		*out = make(map[string]ResourceLimit, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceConstraints.
func (in *ResourceConstraints) DeepCopy() *ResourceConstraints {
	if in == nil {
		return nil
	}
	out := new(ResourceConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimit) DeepCopyInto(out *ResourceLimit) {
	*out = *in
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		x := (*in).DeepCopy()
		*out = &x
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimit.
func (in *ResourceLimit) DeepCopy() *ResourceLimit {
	if in == nil {
		return nil
	}
	out := new(ResourceLimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackOperation) DeepCopyInto(out *RollbackOperation) {
	*out = *in
	in.StartTime.DeepCopyInto(&out.StartTime)
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]RollbackStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackOperation.
func (in *RollbackOperation) DeepCopy() *RollbackOperation {
	if in == nil {
		return nil
	}
	out := new(RollbackOperation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackPolicy) DeepCopyInto(out *RollbackPolicy) {
	*out = *in
	if in.RollbackTriggers != nil {
		in, out := &in.RollbackTriggers, &out.RollbackTriggers
		*out = make([]RollbackTrigger, len(*in))
		copy(*out, *in)
	}
	out.RollbackTimeout = in.RollbackTimeout
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackPolicy.
func (in *RollbackPolicy) DeepCopy() *RollbackPolicy {
	if in == nil {
		return nil
	}
	out := new(RollbackPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackStatus) DeepCopyInto(out *RollbackStatus) {
	*out = *in
	if in.LastRollbackTime != nil {
		in, out := &in.LastRollbackTime, &out.LastRollbackTime
		*out = (*in).DeepCopy()
	}
	if in.RollbackHistory != nil {
		in, out := &in.RollbackHistory, &out.RollbackHistory
		*out = make([]RollbackOperation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CurrentRollback != nil {
		in, out := &in.CurrentRollback, &out.CurrentRollback
		*out = new(RollbackOperation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackStatus.
func (in *RollbackStatus) DeepCopy() *RollbackStatus {
	if in == nil {
		return nil
	}
	out := new(RollbackStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackStep) DeepCopyInto(out *RollbackStep) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackStep.
func (in *RollbackStep) DeepCopy() *RollbackStep {
	if in == nil {
		return nil
	}
	out := new(RollbackStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollbackTrigger) DeepCopyInto(out *RollbackTrigger) {
	*out = *in
	out.Duration = in.Duration
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollbackTrigger.
func (in *RollbackTrigger) DeepCopy() *RollbackTrigger {
	if in == nil {
		return nil
	}
	out := new(RollbackTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionConfiguration) DeepCopyInto(out *SessionConfiguration) {
	*out = *in
	out.SessionTimeout = in.SessionTimeout
	out.HeartbeatInterval = in.HeartbeatInterval
	if in.RecoveryPolicy != nil {
		in, out := &in.RecoveryPolicy, &out.RecoveryPolicy
		*out = new(SessionRecoveryPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionConfiguration.
func (in *SessionConfiguration) DeepCopy() *SessionConfiguration {
	if in == nil {
		return nil
	}
	out := new(SessionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionMetrics) DeepCopyInto(out *SessionMetrics) {
	*out = *in
	if in.AverageDecisionTime != nil {
		in, out := &in.AverageDecisionTime, &out.AverageDecisionTime
		*out = new(v1.Duration)
		**out = **in
	}
	if in.SessionDuration != nil {
		in, out := &in.SessionDuration, &out.SessionDuration
		*out = new(v1.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionMetrics.
func (in *SessionMetrics) DeepCopy() *SessionMetrics {
	if in == nil {
		return nil
	}
	out := new(SessionMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionRecoveryPolicy) DeepCopyInto(out *SessionRecoveryPolicy) {
	*out = *in
	out.RetryDelay = in.RetryDelay
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionRecoveryPolicy.
func (in *SessionRecoveryPolicy) DeepCopy() *SessionRecoveryPolicy {
	if in == nil {
		return nil
	}
	out := new(SessionRecoveryPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionReference) DeepCopyInto(out *SessionReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionReference.
func (in *SessionReference) DeepCopy() *SessionReference {
	if in == nil {
		return nil
	}
	out := new(SessionReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadReference) DeepCopyInto(out *WorkloadReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadReference.
func (in *WorkloadReference) DeepCopy() *WorkloadReference {
	if in == nil {
		return nil
	}
	out := new(WorkloadReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSelector) DeepCopyInto(out *WorkloadSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkloadTypes != nil {
		in, out := &in.WorkloadTypes, &out.WorkloadTypes
		*out = make([]WorkloadType, len(*in))
		copy(*out, *in)
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSelector.
func (in *WorkloadSelector) DeepCopy() *WorkloadSelector {
	if in == nil {
		return nil
	}
	out := new(WorkloadSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadType) DeepCopyInto(out *WorkloadType) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadType.
func (in *WorkloadType) DeepCopy() *WorkloadType {
	if in == nil {
		return nil
	}
	out := new(WorkloadType)
	in.DeepCopyInto(out)
	return out
}
