//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	conditionsv1alpha1 "github.com/kcp-dev/kcp/sdk/apis/third_party/conditions/apis/conditions/v1alpha1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityRules) DeepCopyInto(out *AffinityRules) {
	*out = *in
	if in.ClusterAffinity != nil {
		in, out := &in.ClusterAffinity, &out.ClusterAffinity
		*out = new(ClusterAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterAntiAffinity != nil {
		in, out := &in.ClusterAntiAffinity, &out.ClusterAntiAffinity
		*out = new(ClusterAntiAffinity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityRules.
func (in *AffinityRules) DeepCopy() *AffinityRules {
	if in == nil {
		return nil
	}
	out := new(AffinityRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlueGreenStrategy) DeepCopyInto(out *BlueGreenStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlueGreenStrategy.
func (in *BlueGreenStrategy) DeepCopy() *BlueGreenStrategy {
	if in == nil {
		return nil
	}
	out := new(BlueGreenStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanaryStrategy) DeepCopyInto(out *CanaryStrategy) {
	*out = *in
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanaryStrategy.
func (in *CanaryStrategy) DeepCopy() *CanaryStrategy {
	if in == nil {
		return nil
	}
	out := new(CanaryStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAffinity) DeepCopyInto(out *ClusterAffinity) {
	*out = *in
	if in.RequiredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.RequiredDuringSchedulingIgnoredDuringExecution, &out.RequiredDuringSchedulingIgnoredDuringExecution
		*out = make([]ClusterAffinityTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.PreferredDuringSchedulingIgnoredDuringExecution, &out.PreferredDuringSchedulingIgnoredDuringExecution
		*out = make([]WeightedClusterAffinityTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAffinity.
func (in *ClusterAffinity) DeepCopy() *ClusterAffinity {
	if in == nil {
		return nil
	}
	out := new(ClusterAffinity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAffinityTerm) DeepCopyInto(out *ClusterAffinityTerm) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationSelector != nil {
		in, out := &in.LocationSelector, &out.LocationSelector
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAffinityTerm.
func (in *ClusterAffinityTerm) DeepCopy() *ClusterAffinityTerm {
	if in == nil {
		return nil
	}
	out := new(ClusterAffinityTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAntiAffinity) DeepCopyInto(out *ClusterAntiAffinity) {
	*out = *in
	if in.RequiredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.RequiredDuringSchedulingIgnoredDuringExecution, &out.RequiredDuringSchedulingIgnoredDuringExecution
		*out = make([]ClusterAffinityTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredDuringSchedulingIgnoredDuringExecution != nil {
		in, out := &in.PreferredDuringSchedulingIgnoredDuringExecution, &out.PreferredDuringSchedulingIgnoredDuringExecution
		*out = make([]WeightedClusterAffinityTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAntiAffinity.
func (in *ClusterAntiAffinity) DeepCopy() *ClusterAntiAffinity {
	if in == nil {
		return nil
	}
	out := new(ClusterAntiAffinity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDistributionPolicy) DeepCopyInto(out *ClusterDistributionPolicy) {
	*out = *in
	if in.Preferences != nil {
		in, out := &in.Preferences, &out.Preferences
		*out = make([]ClusterPreference, len(*in))
		copy(*out, *in)
	}
	if in.MinReplicasPerCluster != nil {
		in, out := &in.MinReplicasPerCluster, &out.MinReplicasPerCluster
		*out = new(int32)
		**out = **in
	}
	if in.MaxReplicasPerCluster != nil {
		in, out := &in.MaxReplicasPerCluster, &out.MaxReplicasPerCluster
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDistributionPolicy.
func (in *ClusterDistributionPolicy) DeepCopy() *ClusterDistributionPolicy {
	if in == nil {
		return nil
	}
	out := new(ClusterDistributionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterEndpoint) DeepCopyInto(out *ClusterEndpoint) {
	*out = *in
	if in.CABundle != nil {
		in, out := &in.CABundle, &out.CABundle
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterEndpoint.
func (in *ClusterEndpoint) DeepCopy() *ClusterEndpoint {
	if in == nil {
		return nil
	}
	out := new(ClusterEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterPreference) DeepCopyInto(out *ClusterPreference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterPreference.
func (in *ClusterPreference) DeepCopy() *ClusterPreference {
	if in == nil {
		return nil
	}
	out := new(ClusterPreference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistration) DeepCopyInto(out *ClusterRegistration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistration.
func (in *ClusterRegistration) DeepCopy() *ClusterRegistration {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterRegistration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationList) DeepCopyInto(out *ClusterRegistrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterRegistration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationList.
func (in *ClusterRegistrationList) DeepCopy() *ClusterRegistrationList {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterRegistrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationSpec) DeepCopyInto(out *ClusterRegistrationSpec) {
	*out = *in
	in.ClusterEndpoint.DeepCopyInto(&out.ClusterEndpoint)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationSpec.
func (in *ClusterRegistrationSpec) DeepCopy() *ClusterRegistrationSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationStatus) DeepCopyInto(out *ClusterRegistrationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationStatus.
func (in *ClusterRegistrationStatus) DeepCopy() *ClusterRegistrationStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelector) DeepCopyInto(out *ClusterSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationSelector != nil {
		in, out := &in.LocationSelector, &out.LocationSelector
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClusterNames != nil {
		in, out := &in.ClusterNames, &out.ClusterNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelector.
func (in *ClusterSelector) DeepCopy() *ClusterSelector {
	if in == nil {
		return nil
	}
	out := new(ClusterSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterTrafficMetrics) DeepCopyInto(out *ClusterTrafficMetrics) {
	*out = *in
	if in.P95Latency != nil {
		in, out := &in.P95Latency, &out.P95Latency
		*out = new(int64)
		**out = **in
	}
	in.LastUpdated.DeepCopyInto(&out.LastUpdated)
	if in.HealthScore != nil {
		in, out := &in.HealthScore, &out.HealthScore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterTrafficMetrics.
func (in *ClusterTrafficMetrics) DeepCopy() *ClusterTrafficMetrics {
	if in == nil {
		return nil
	}
	out := new(ClusterTrafficMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterWeight) DeepCopyInto(out *ClusterWeight) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterWeight.
func (in *ClusterWeight) DeepCopy() *ClusterWeight {
	if in == nil {
		return nil
	}
	out := new(ClusterWeight)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterWorkloadStatus) DeepCopyInto(out *ClusterWorkloadStatus) {
	*out = *in
	in.LastSeen.DeepCopyInto(&out.LastSeen)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterWorkloadStatus.
func (in *ClusterWorkloadStatus) DeepCopy() *ClusterWorkloadStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterWorkloadStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CurrentMetricStatus) DeepCopyInto(out *CurrentMetricStatus) {
	*out = *in
	out.CurrentValue = in.CurrentValue
	out.TargetValue = in.TargetValue
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CurrentMetricStatus.
func (in *CurrentMetricStatus) DeepCopy() *CurrentMetricStatus {
	if in == nil {
		return nil
	}
	out := new(CurrentMetricStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricSelector) DeepCopyInto(out *MetricSelector) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.AggregationType != nil {
		in, out := &in.AggregationType, &out.AggregationType
		*out = new(MetricAggregationType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricSelector.
func (in *MetricSelector) DeepCopy() *MetricSelector {
	if in == nil {
		return nil
	}
	out := new(MetricSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacedWorkload) DeepCopyInto(out *PlacedWorkload) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
	in.PlacementTime.DeepCopyInto(&out.PlacementTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacedWorkload.
func (in *PlacedWorkload) DeepCopy() *PlacedWorkload {
	if in == nil {
		return nil
	}
	out := new(PlacedWorkload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacedWorkloadAdvanced) DeepCopyInto(out *PlacedWorkloadAdvanced) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
	in.PlacementTime.DeepCopyInto(&out.PlacementTime)
	if in.TrafficWeight != nil {
		in, out := &in.TrafficWeight, &out.TrafficWeight
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacedWorkloadAdvanced.
func (in *PlacedWorkloadAdvanced) DeepCopy() *PlacedWorkloadAdvanced {
	if in == nil {
		return nil
	}
	out := new(PlacedWorkloadAdvanced)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingUpdateStrategy) DeepCopyInto(out *RollingUpdateStrategy) {
	*out = *in
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(intstr.IntOrString)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingUpdateStrategy.
func (in *RollingUpdateStrategy) DeepCopy() *RollingUpdateStrategy {
	if in == nil {
		return nil
	}
	out := new(RollingUpdateStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutState) DeepCopyInto(out *RolloutState) {
	*out = *in
	if in.CurrentStep != nil {
		in, out := &in.CurrentStep, &out.CurrentStep
		*out = new(int32)
		**out = **in
	}
	if in.TotalSteps != nil {
		in, out := &in.TotalSteps, &out.TotalSteps
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutState.
func (in *RolloutState) DeepCopy() *RolloutState {
	if in == nil {
		return nil
	}
	out := new(RolloutState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutStrategy) DeepCopyInto(out *RolloutStrategy) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(RollingUpdateStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.BlueGreen != nil {
		in, out := &in.BlueGreen, &out.BlueGreen
		*out = new(BlueGreenStrategy)
		**out = **in
	}
	if in.Canary != nil {
		in, out := &in.Canary, &out.Canary
		*out = new(CanaryStrategy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutStrategy.
func (in *RolloutStrategy) DeepCopy() *RolloutStrategy {
	if in == nil {
		return nil
	}
	out := new(RolloutStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingBehavior) DeepCopyInto(out *ScalingBehavior) {
	*out = *in
	if in.ScaleUp != nil {
		in, out := &in.ScaleUp, &out.ScaleUp
		*out = new(ScalingDirection)
		(*in).DeepCopyInto(*out)
	}
	if in.ScaleDown != nil {
		in, out := &in.ScaleDown, &out.ScaleDown
		*out = new(ScalingDirection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingBehavior.
func (in *ScalingBehavior) DeepCopy() *ScalingBehavior {
	if in == nil {
		return nil
	}
	out := new(ScalingBehavior)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingDirection) DeepCopyInto(out *ScalingDirection) {
	*out = *in
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]ScalingPolicy, len(*in))
		copy(*out, *in)
	}
	if in.StabilizationWindowSeconds != nil {
		in, out := &in.StabilizationWindowSeconds, &out.StabilizationWindowSeconds
		*out = new(int32)
		**out = **in
	}
	if in.SelectPolicy != nil {
		in, out := &in.SelectPolicy, &out.SelectPolicy
		*out = new(ScalingPolicySelect)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingDirection.
func (in *ScalingDirection) DeepCopy() *ScalingDirection {
	if in == nil {
		return nil
	}
	out := new(ScalingDirection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingMetric) DeepCopyInto(out *ScalingMetric) {
	*out = *in
	out.TargetValue = in.TargetValue
	if in.MetricSelector != nil {
		in, out := &in.MetricSelector, &out.MetricSelector
		*out = new(MetricSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingMetric.
func (in *ScalingMetric) DeepCopy() *ScalingMetric {
	if in == nil {
		return nil
	}
	out := new(ScalingMetric)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicy) DeepCopyInto(out *ScalingPolicy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicy.
func (in *ScalingPolicy) DeepCopy() *ScalingPolicy {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionAffinity) DeepCopyInto(out *SessionAffinity) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionAffinity.
func (in *SessionAffinity) DeepCopy() *SessionAffinity {
	if in == nil {
		return nil
	}
	out := new(SessionAffinity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionBackendStatus) DeepCopyInto(out *SessionBackendStatus) {
	*out = *in
	if in.LastHealthCheck != nil {
		in, out := &in.LastHealthCheck, &out.LastHealthCheck
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionBackendStatus.
func (in *SessionBackendStatus) DeepCopy() *SessionBackendStatus {
	if in == nil {
		return nil
	}
	out := new(SessionBackendStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionConfig) DeepCopyInto(out *SessionConfig) {
	*out = *in
	if in.CookieConfig != nil {
		in, out := &in.CookieConfig, &out.CookieConfig
		*out = new(SessionCookieConfig)
		**out = **in
	}
	if in.PersistenceConfig != nil {
		in, out := &in.PersistenceConfig, &out.PersistenceConfig
		*out = new(SessionPersistenceConfig)
		**out = **in
	}
	out.DrainTimeout = in.DrainTimeout
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionConfig.
func (in *SessionConfig) DeepCopy() *SessionConfig {
	if in == nil {
		return nil
	}
	out := new(SessionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionCookieConfig) DeepCopyInto(out *SessionCookieConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionCookieConfig.
func (in *SessionCookieConfig) DeepCopy() *SessionCookieConfig {
	if in == nil {
		return nil
	}
	out := new(SessionCookieConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionPersistenceConfig) DeepCopyInto(out *SessionPersistenceConfig) {
	*out = *in
	out.TTL = in.TTL
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionPersistenceConfig.
func (in *SessionPersistenceConfig) DeepCopy() *SessionPersistenceConfig {
	if in == nil {
		return nil
	}
	out := new(SessionPersistenceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionTimeout) DeepCopyInto(out *SessionTimeout) {
	*out = *in
	out.IdleTimeout = in.IdleTimeout
	out.MaxLifetime = in.MaxLifetime
	out.WarningThreshold = in.WarningThreshold
	out.CleanupInterval = in.CleanupInterval
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionTimeout.
func (in *SessionTimeout) DeepCopy() *SessionTimeout {
	if in == nil {
		return nil
	}
	out := new(SessionTimeout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusFieldSelector) DeepCopyInto(out *StatusFieldSelector) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusFieldSelector.
func (in *StatusFieldSelector) DeepCopy() *StatusFieldSelector {
	if in == nil {
		return nil
	}
	out := new(StatusFieldSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMetrics) DeepCopyInto(out *TrafficMetrics) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMetrics.
func (in *TrafficMetrics) DeepCopy() *TrafficMetrics {
	if in == nil {
		return nil
	}
	out := new(TrafficMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficMetrics) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMetricsList) DeepCopyInto(out *TrafficMetricsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TrafficMetrics, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMetricsList.
func (in *TrafficMetricsList) DeepCopy() *TrafficMetricsList {
	if in == nil {
		return nil
	}
	out := new(TrafficMetricsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficMetricsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMetricsSpec) DeepCopyInto(out *TrafficMetricsSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	in.MetricsSource.DeepCopyInto(&out.MetricsSource)
	if in.CollectionInterval != nil {
		in, out := &in.CollectionInterval, &out.CollectionInterval
		*out = new(v1.Duration)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMetricsSpec.
func (in *TrafficMetricsSpec) DeepCopy() *TrafficMetricsSpec {
	if in == nil {
		return nil
	}
	out := new(TrafficMetricsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMetricsStatus) DeepCopyInto(out *TrafficMetricsStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make(map[string]ClusterTrafficMetrics, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ObservedWorkloads != nil {
		in, out := &in.ObservedWorkloads, &out.ObservedWorkloads
		*out = make([]WorkloadReference, len(*in))
		copy(*out, *in)
	}
	if in.TotalRequests != nil {
		in, out := &in.TotalRequests, &out.TotalRequests
		*out = new(int64)
		**out = **in
	}
	if in.OverallSuccessRate != nil {
		in, out := &in.OverallSuccessRate, &out.OverallSuccessRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMetricsStatus.
func (in *TrafficMetricsStatus) DeepCopy() *TrafficMetricsStatus {
	if in == nil {
		return nil
	}
	out := new(TrafficMetricsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficSource) DeepCopyInto(out *TrafficSource) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficSource.
func (in *TrafficSource) DeepCopy() *TrafficSource {
	if in == nil {
		return nil
	}
	out := new(TrafficSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficSplitting) DeepCopyInto(out *TrafficSplitting) {
	*out = *in
	if in.ClusterWeights != nil {
		in, out := &in.ClusterWeights, &out.ClusterWeights
		*out = make([]ClusterWeight, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficSplitting.
func (in *TrafficSplitting) DeepCopy() *TrafficSplitting {
	if in == nil {
		return nil
	}
	out := new(TrafficSplitting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficState) DeepCopyInto(out *TrafficState) {
	*out = *in
	if in.ActiveWeights != nil {
		in, out := &in.ActiveWeights, &out.ActiveWeights
		*out = make([]ClusterWeight, len(*in))
		copy(*out, *in)
	}
	if in.TargetWeights != nil {
		in, out := &in.TargetWeights, &out.TargetWeights
		*out = make([]ClusterWeight, len(*in))
		copy(*out, *in)
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficState.
func (in *TrafficState) DeepCopy() *TrafficState {
	if in == nil {
		return nil
	}
	out := new(TrafficState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedClusterAffinityTerm) DeepCopyInto(out *WeightedClusterAffinityTerm) {
	*out = *in
	in.ClusterAffinityTerm.DeepCopyInto(&out.ClusterAffinityTerm)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedClusterAffinityTerm.
func (in *WeightedClusterAffinityTerm) DeepCopy() *WeightedClusterAffinityTerm {
	if in == nil {
		return nil
	}
	out := new(WeightedClusterAffinityTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadCondition) DeepCopyInto(out *WorkloadCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadCondition.
func (in *WorkloadCondition) DeepCopy() *WorkloadCondition {
	if in == nil {
		return nil
	}
	out := new(WorkloadCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacement) DeepCopyInto(out *WorkloadPlacement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacement.
func (in *WorkloadPlacement) DeepCopy() *WorkloadPlacement {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadPlacement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementAdvanced) DeepCopyInto(out *WorkloadPlacementAdvanced) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementAdvanced.
func (in *WorkloadPlacementAdvanced) DeepCopy() *WorkloadPlacementAdvanced {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementAdvanced)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadPlacementAdvanced) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementAdvancedList) DeepCopyInto(out *WorkloadPlacementAdvancedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadPlacementAdvanced, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementAdvancedList.
func (in *WorkloadPlacementAdvancedList) DeepCopy() *WorkloadPlacementAdvancedList {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementAdvancedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadPlacementAdvancedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementAdvancedSpec) DeepCopyInto(out *WorkloadPlacementAdvancedSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	if in.AffinityRules != nil {
		in, out := &in.AffinityRules, &out.AffinityRules
		*out = new(AffinityRules)
		(*in).DeepCopyInto(*out)
	}
	if in.RolloutStrategy != nil {
		in, out := &in.RolloutStrategy, &out.RolloutStrategy
		*out = new(RolloutStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficSplitting != nil {
		in, out := &in.TrafficSplitting, &out.TrafficSplitting
		*out = new(TrafficSplitting)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementAdvancedSpec.
func (in *WorkloadPlacementAdvancedSpec) DeepCopy() *WorkloadPlacementAdvancedSpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementAdvancedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementAdvancedStatus) DeepCopyInto(out *WorkloadPlacementAdvancedStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedClusters != nil {
		in, out := &in.SelectedClusters, &out.SelectedClusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PlacedWorkloads != nil {
		in, out := &in.PlacedWorkloads, &out.PlacedWorkloads
		*out = make([]PlacedWorkloadAdvanced, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RolloutState != nil {
		in, out := &in.RolloutState, &out.RolloutState
		*out = new(RolloutState)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficState != nil {
		in, out := &in.TrafficState, &out.TrafficState
		*out = new(TrafficState)
		(*in).DeepCopyInto(*out)
	}
	if in.LastPlacementTime != nil {
		in, out := &in.LastPlacementTime, &out.LastPlacementTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementAdvancedStatus.
func (in *WorkloadPlacementAdvancedStatus) DeepCopy() *WorkloadPlacementAdvancedStatus {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementAdvancedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementList) DeepCopyInto(out *WorkloadPlacementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadPlacement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementList.
func (in *WorkloadPlacementList) DeepCopy() *WorkloadPlacementList {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadPlacementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementSpec) DeepCopyInto(out *WorkloadPlacementSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementSpec.
func (in *WorkloadPlacementSpec) DeepCopy() *WorkloadPlacementSpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadPlacementStatus) DeepCopyInto(out *WorkloadPlacementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedClusters != nil {
		in, out := &in.SelectedClusters, &out.SelectedClusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PlacedWorkloads != nil {
		in, out := &in.PlacedWorkloads, &out.PlacedWorkloads
		*out = make([]PlacedWorkload, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastPlacementTime != nil {
		in, out := &in.LastPlacementTime, &out.LastPlacementTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadPlacementStatus.
func (in *WorkloadPlacementStatus) DeepCopy() *WorkloadPlacementStatus {
	if in == nil {
		return nil
	}
	out := new(WorkloadPlacementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadReference) DeepCopyInto(out *WorkloadReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadReference.
func (in *WorkloadReference) DeepCopy() *WorkloadReference {
	if in == nil {
		return nil
	}
	out := new(WorkloadReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadScalingPolicy) DeepCopyInto(out *WorkloadScalingPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadScalingPolicy.
func (in *WorkloadScalingPolicy) DeepCopy() *WorkloadScalingPolicy {
	if in == nil {
		return nil
	}
	out := new(WorkloadScalingPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadScalingPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadScalingPolicyList) DeepCopyInto(out *WorkloadScalingPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadScalingPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadScalingPolicyList.
func (in *WorkloadScalingPolicyList) DeepCopy() *WorkloadScalingPolicyList {
	if in == nil {
		return nil
	}
	out := new(WorkloadScalingPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadScalingPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadScalingPolicySpec) DeepCopyInto(out *WorkloadScalingPolicySpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	if in.ScalingMetrics != nil {
		in, out := &in.ScalingMetrics, &out.ScalingMetrics
		*out = make([]ScalingMetric, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScalingBehavior != nil {
		in, out := &in.ScalingBehavior, &out.ScalingBehavior
		*out = new(ScalingBehavior)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterDistribution != nil {
		in, out := &in.ClusterDistribution, &out.ClusterDistribution
		*out = new(ClusterDistributionPolicy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadScalingPolicySpec.
func (in *WorkloadScalingPolicySpec) DeepCopy() *WorkloadScalingPolicySpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadScalingPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadScalingPolicyStatus) DeepCopyInto(out *WorkloadScalingPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CurrentReplicas != nil {
		in, out := &in.CurrentReplicas, &out.CurrentReplicas
		*out = new(int32)
		**out = **in
	}
	if in.DesiredReplicas != nil {
		in, out := &in.DesiredReplicas, &out.DesiredReplicas
		*out = new(int32)
		**out = **in
	}
	if in.ClusterReplicas != nil {
		in, out := &in.ClusterReplicas, &out.ClusterReplicas
		*out = make(map[string]int32, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LastScaleTime != nil {
		in, out := &in.LastScaleTime, &out.LastScaleTime
		*out = (*in).DeepCopy()
	}
	if in.CurrentMetrics != nil {
		in, out := &in.CurrentMetrics, &out.CurrentMetrics
		*out = make([]CurrentMetricStatus, len(*in))
		copy(*out, *in)
	}
	if in.ObservedWorkloads != nil {
		in, out := &in.ObservedWorkloads, &out.ObservedWorkloads
		*out = make([]WorkloadReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadScalingPolicyStatus.
func (in *WorkloadScalingPolicyStatus) DeepCopy() *WorkloadScalingPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(WorkloadScalingPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSelector) DeepCopyInto(out *WorkloadSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkloadTypes != nil {
		in, out := &in.WorkloadTypes, &out.WorkloadTypes
		*out = make([]WorkloadType, len(*in))
		copy(*out, *in)
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSelector.
func (in *WorkloadSelector) DeepCopy() *WorkloadSelector {
	if in == nil {
		return nil
	}
	out := new(WorkloadSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSessionPolicy) DeepCopyInto(out *WorkloadSessionPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSessionPolicy.
func (in *WorkloadSessionPolicy) DeepCopy() *WorkloadSessionPolicy {
	if in == nil {
		return nil
	}
	out := new(WorkloadSessionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadSessionPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSessionPolicyList) DeepCopyInto(out *WorkloadSessionPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadSessionPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSessionPolicyList.
func (in *WorkloadSessionPolicyList) DeepCopy() *WorkloadSessionPolicyList {
	if in == nil {
		return nil
	}
	out := new(WorkloadSessionPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadSessionPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSessionPolicySpec) DeepCopyInto(out *WorkloadSessionPolicySpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	in.SessionConfig.DeepCopyInto(&out.SessionConfig)
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(SessionAffinity)
		**out = **in
	}
	if in.SessionTimeout != nil {
		in, out := &in.SessionTimeout, &out.SessionTimeout
		*out = new(SessionTimeout)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSessionPolicySpec.
func (in *WorkloadSessionPolicySpec) DeepCopy() *WorkloadSessionPolicySpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadSessionPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSessionPolicyStatus) DeepCopyInto(out *WorkloadSessionPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.SessionBackends != nil {
		in, out := &in.SessionBackends, &out.SessionBackends
		*out = make([]SessionBackendStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AffectedWorkloads != nil {
		in, out := &in.AffectedWorkloads, &out.AffectedWorkloads
		*out = make([]WorkloadReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSessionPolicyStatus.
func (in *WorkloadSessionPolicyStatus) DeepCopy() *WorkloadSessionPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(WorkloadSessionPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadStatusAggregator) DeepCopyInto(out *WorkloadStatusAggregator) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadStatusAggregator.
func (in *WorkloadStatusAggregator) DeepCopy() *WorkloadStatusAggregator {
	if in == nil {
		return nil
	}
	out := new(WorkloadStatusAggregator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadStatusAggregator) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadStatusAggregatorList) DeepCopyInto(out *WorkloadStatusAggregatorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadStatusAggregator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadStatusAggregatorList.
func (in *WorkloadStatusAggregatorList) DeepCopy() *WorkloadStatusAggregatorList {
	if in == nil {
		return nil
	}
	out := new(WorkloadStatusAggregatorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadStatusAggregatorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadStatusAggregatorSpec) DeepCopyInto(out *WorkloadStatusAggregatorSpec) {
	*out = *in
	in.WorkloadSelector.DeepCopyInto(&out.WorkloadSelector)
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
	if in.StatusFields != nil {
		in, out := &in.StatusFields, &out.StatusFields
		*out = make([]StatusFieldSelector, len(*in))
		copy(*out, *in)
	}
	if in.UpdateInterval != nil {
		in, out := &in.UpdateInterval, &out.UpdateInterval
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadStatusAggregatorSpec.
func (in *WorkloadStatusAggregatorSpec) DeepCopy() *WorkloadStatusAggregatorSpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadStatusAggregatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadStatusAggregatorStatus) DeepCopyInto(out *WorkloadStatusAggregatorStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.TotalWorkloads != nil {
		in, out := &in.TotalWorkloads, &out.TotalWorkloads
		*out = new(int32)
		**out = **in
	}
	if in.ReadyWorkloads != nil {
		in, out := &in.ReadyWorkloads, &out.ReadyWorkloads
		*out = new(int32)
		**out = **in
	}
	if in.ClusterStatus != nil {
		in, out := &in.ClusterStatus, &out.ClusterStatus
		*out = make(map[string]ClusterWorkloadStatus, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.WorkloadStatus != nil {
		in, out := &in.WorkloadStatus, &out.WorkloadStatus
		*out = make([]WorkloadStatusSummary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AggregatedFields != nil {
		in, out := &in.AggregatedFields, &out.AggregatedFields
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadStatusAggregatorStatus.
func (in *WorkloadStatusAggregatorStatus) DeepCopy() *WorkloadStatusAggregatorStatus {
	if in == nil {
		return nil
	}
	out := new(WorkloadStatusAggregatorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadStatusSummary) DeepCopyInto(out *WorkloadStatusSummary) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]WorkloadCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadStatusSummary.
func (in *WorkloadStatusSummary) DeepCopy() *WorkloadStatusSummary {
	if in == nil {
		return nil
	}
	out := new(WorkloadStatusSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadType) DeepCopyInto(out *WorkloadType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadType.
func (in *WorkloadType) DeepCopy() *WorkloadType {
	if in == nil {
		return nil
	}
	out := new(WorkloadType)
	in.DeepCopyInto(out)
	return out
}
